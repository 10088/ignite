package org.gridgain.grid.kernal.processors.rest.client.message;

option java_package = "org.gridgain.grid.kernal.processors.rest.client.message.protobuf";
option java_outer_classname = "ClientMessagesProtocols";

enum ObjectWrapperType {
    // Supported common types.
    NONE = 0;
    BOOL = 1;
    BYTE = 2;
    SHORT = 3;
    INT32 = 4;
    INT64 = 5;
    FLOAT = 6;
    DOUBLE = 7;
    BYTES = 8;
    STRING = 9;
    COLLECTION = 10;
    MAP = 11;
    UUID = 12;
    SERIALIZABLE = 13;

    // Communication requests.
    CACHE_REQUEST = 20;
    TASK_REQUEST = 21;
    LOG_REQUEST = 22;
    TOPOLOGY_REQUEST = 23;
    AUTH_REQUEST = 24;

    // Common response for all requests.
    RESPONSE = 40;

    // Data beans passed inside a response.
    NODE_BEAN = 60;
    TASK_BEAN = 61;
}

// Common structure to encapsulate wrapped object type and its data.
message ObjectWrapper {
    required ObjectWrapperType type = 1;
    required bytes binary = 2;
}

message Collection {
    repeated ObjectWrapper item = 1;
}

message KeyValue {
    required ObjectWrapper key = 1;
    required ObjectWrapper value = 2;
}

message Map {
    repeated KeyValue entry = 1;
}

//-------------------------------------------
// Request messages.
//-------------------------------------------

// Parent message for all requests,
// inheritance in Java is replaced with composition in protobuf.
message ProtoRequest {
    required bytes body = 1; // Concrete request bean serialized in bytes array.
    optional bytes sessionToken = 2;
}

message ProtoAuthenticationRequest {
    required ObjectWrapper credentials = 1;
}

message ProtoCacheRequest {
    enum GridCacheOperation {
        PUT = 0x01;
        PUT_ALL = 0x02;
        GET = 0x03;
        GET_ALL = 0x04;
        RMV = 0x05;
        RMV_ALL = 0x06;
        //ADD = 0x07; // Memcache operation should not be used in clients.
        REPLACE = 0x08;
        CAS = 0x09;
        METRICS = 0x0A;
        APPEND = 0x0B;
        PREPEND = 0x0C;
    }

    required GridCacheOperation operation = 3;
    optional string cacheName = 4;
    optional ObjectWrapper key = 5;
    optional ObjectWrapper value = 6;
    optional ObjectWrapper value2 = 7;
    optional Map values = 8;
    optional int32 cacheFlagsOn = 9;
}

message ProtoLogRequest {
    optional string path = 3;
    optional int32 from = 4;
    optional int32 to = 5;
}

message ProtoTaskRequest {
    required string taskName = 3;
    required ObjectWrapper argument = 4;
}

message ProtoTopologyRequest {
    required bool includeAttributes = 3;
    required bool includeMetrics = 4;
    optional string nodeId = 5;
    optional string nodeIp = 6;
}

//-------------------------------------------
// Response messages.
//-------------------------------------------

message ProtoResponse {
    required int32 status = 1;
    optional string errorMessage = 2;  // If any error happens (status != OK).
    optional ObjectWrapper resultBean = 3; // If successful (status == OK).
    optional bytes sessionToken = 4;
}

message ProtoTaskBean {
    required string taskId = 2; // Synthetic ID containing task ID and result holding node ID.
    required bool finished = 3;
    optional ObjectWrapper resultBean = 4;
    optional string error = 5;
}

message ProtoNodeMetricsBean {
    required int64 lastUpdateTime = 1 [default = -1];
    required int32 maximumActiveJobs = 2 [default = -1];
    required int32 currentActiveJobs = 3 [default = -1];
    required float averageActiveJobs = 4 [default = -1];
    required int32 maximumWaitingJobs = 5 [default = -1];
    required int32 currentWaitingJobs = 6 [default = -1];
    required float averageWaitingJobs = 7 [default = -1];
    required int32 maximumRejectedJobs = 8 [default = -1];
    required int32 currentRejectedJobs = 9 [default = -1];
    required float averageRejectedJobs = 10 [default = -1];
    required int32 maximumCancelledJobs = 11 [default = -1];
    required int32 currentCancelledJobs = 12 [default = -1];
    required float averageCancelledJobs = 13 [default = -1];
    required int32 totalRejectedJobs = 14 [default = -1];
    required int32 totalCancelledJobs = 15 [default = -1];
    required int32 totalExecutedJobs = 16 [default = -1];
    required int64 maximumJobWaitTime = 17 [default = -1];
    required int64 currentJobWaitTime = 18 [default = -1];
    required double averageJobWaitTime = 19 [default = -1];
    required int64 maximumJobExecuteTime = 20 [default = -1];
    required int64 currentJobExecuteTime = 21 [default = -1];
    required double averageJobExecuteTime = 22 [default = -1];
    required int64 totalIdleTime = 23 [default = -1];
    required int64 currentIdleTime = 24 [default = -1];
    required int32 totalCpus = 25 [default = -1];
    required double currentCpuLoad = 26 [default = -1];
    required double averageCpuLoad = 27 [default = -1];
    required int64 heapMemoryInitialized = 28 [default = -1];
    required int64 heapMemoryUsed = 29 [default = -1];
    required int64 heapMemoryCommitted = 30 [default = -1];
    required int64 heapMemoryMaximum = 31 [default = -1];
    required int64 nonHeapMemoryInitialized = 32 [default = -1];
    required int64 nonHeapMemoryUsed = 33 [default = -1];
    required int64 nonHeapMemoryCommitted = 34 [default = -1];
    required int64 nonHeapMemoryMaximum = 35 [default = -1];
    required int64 upTime = 36 [default = -1];
    required int64 startTime = 37 [default = -1];
    required int64 nodeStartTime = 38 [default = -1];
    required int32 currentThreadCount = 39 [default = -1];
    required int32 maximumThreadCount = 40 [default = -1];
    required int64 totalStartedThreadCount = 41 [default = -1];
    required int32 currentDaemonThreadCount = 42 [default = -1];
    required int64 fileSystemFreeSpace = 43 [default = -1];
    required int64 fileSystemTotalSpace = 44 [default = -1];
    required int64 fileSystemUsableSpace = 45 [default = -1];
    required int64 lastDataVersion = 46 [default = -1];
    optional double currentGcCpuLoad = 47 [default = -1];
    optional int32 totalExecutedTasks = 48 [default = -1];
    optional int32 sentMessagesCount = 49 [default = -1];
    optional int64 sentBytesCount = 50 [default = -1];
    optional int32 receivedMessagesCount = 51 [default = -1];
    optional int64 receivedBytesCount = 52 [default = -1];
}

message ProtoNodeBean {
    required bytes nodeId = 1;
    repeated string tcpAddress = 2;
    repeated string jettyAddress = 3;
    required int32 tcpPort = 4;
    required int32 jettyPort = 5;
    optional ProtoNodeMetricsBean metrics = 6;
    optional Map attributes = 7;
    optional Map caches = 9;
    repeated string tcpHostName = 10;
    repeated string jettyHostName = 11;
    required int32 replicaCount = 13;
    required ObjectWrapper consistentId = 14;
}
