// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ClientMessages.proto

#ifndef PROTOBUF_ClientMessages_2eproto__INCLUDED
#define PROTOBUF_ClientMessages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace org {
namespace gridgain {
namespace grid {
namespace kernal {
namespace processors {
namespace rest {
namespace client {
namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ClientMessages_2eproto();
void protobuf_AssignDesc_ClientMessages_2eproto();
void protobuf_ShutdownFile_ClientMessages_2eproto();

class ObjectWrapper;
class Collection;
class KeyValue;
class Map;
class ProtoRequest;
class ProtoAuthenticationRequest;
class ProtoCacheRequest;
class ProtoLogRequest;
class ProtoTaskRequest;
class ProtoTopologyRequest;
class ProtoResponse;
class ProtoTaskBean;
class ProtoNodeMetricsBean;
class ProtoNodeBean;

enum ProtoCacheRequest_GridCacheOperation {
  ProtoCacheRequest_GridCacheOperation_PUT = 1,
  ProtoCacheRequest_GridCacheOperation_PUT_ALL = 2,
  ProtoCacheRequest_GridCacheOperation_GET = 3,
  ProtoCacheRequest_GridCacheOperation_GET_ALL = 4,
  ProtoCacheRequest_GridCacheOperation_RMV = 5,
  ProtoCacheRequest_GridCacheOperation_RMV_ALL = 6,
  ProtoCacheRequest_GridCacheOperation_REPLACE = 8,
  ProtoCacheRequest_GridCacheOperation_CAS = 9,
  ProtoCacheRequest_GridCacheOperation_METRICS = 10,
  ProtoCacheRequest_GridCacheOperation_APPEND = 11,
  ProtoCacheRequest_GridCacheOperation_PREPEND = 12
};
bool ProtoCacheRequest_GridCacheOperation_IsValid(int value);
const ProtoCacheRequest_GridCacheOperation ProtoCacheRequest_GridCacheOperation_GridCacheOperation_MIN = ProtoCacheRequest_GridCacheOperation_PUT;
const ProtoCacheRequest_GridCacheOperation ProtoCacheRequest_GridCacheOperation_GridCacheOperation_MAX = ProtoCacheRequest_GridCacheOperation_PREPEND;
const int ProtoCacheRequest_GridCacheOperation_GridCacheOperation_ARRAYSIZE = ProtoCacheRequest_GridCacheOperation_GridCacheOperation_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProtoCacheRequest_GridCacheOperation_descriptor();
inline const ::std::string& ProtoCacheRequest_GridCacheOperation_Name(ProtoCacheRequest_GridCacheOperation value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProtoCacheRequest_GridCacheOperation_descriptor(), value);
}
inline bool ProtoCacheRequest_GridCacheOperation_Parse(
    const ::std::string& name, ProtoCacheRequest_GridCacheOperation* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProtoCacheRequest_GridCacheOperation>(
    ProtoCacheRequest_GridCacheOperation_descriptor(), name, value);
}
enum ObjectWrapperType {
  NONE = 0,
  BOOL = 1,
  BYTE = 2,
  SHORT = 3,
  INT32 = 4,
  INT64 = 5,
  FLOAT = 6,
  DOUBLE = 7,
  BYTES = 8,
  STRING = 9,
  COLLECTION = 10,
  MAP = 11,
  UUID = 12,
  SERIALIZABLE = 13,
  CACHE_REQUEST = 20,
  TASK_REQUEST = 21,
  LOG_REQUEST = 22,
  TOPOLOGY_REQUEST = 23,
  AUTH_REQUEST = 24,
  RESPONSE = 40,
  NODE_BEAN = 60,
  TASK_BEAN = 61
};
bool ObjectWrapperType_IsValid(int value);
const ObjectWrapperType ObjectWrapperType_MIN = NONE;
const ObjectWrapperType ObjectWrapperType_MAX = TASK_BEAN;
const int ObjectWrapperType_ARRAYSIZE = ObjectWrapperType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ObjectWrapperType_descriptor();
inline const ::std::string& ObjectWrapperType_Name(ObjectWrapperType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ObjectWrapperType_descriptor(), value);
}
inline bool ObjectWrapperType_Parse(
    const ::std::string& name, ObjectWrapperType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ObjectWrapperType>(
    ObjectWrapperType_descriptor(), name, value);
}
// ===================================================================

class ObjectWrapper : public ::google::protobuf::Message {
 public:
  ObjectWrapper();
  virtual ~ObjectWrapper();
  
  ObjectWrapper(const ObjectWrapper& from);
  
  inline ObjectWrapper& operator=(const ObjectWrapper& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjectWrapper& default_instance();
  
  void Swap(ObjectWrapper* other);
  
  // implements Message ----------------------------------------------
  
  ObjectWrapper* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ObjectWrapper& from);
  void MergeFrom(const ObjectWrapper& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .org.gridgain.grid.kernal.processors.rest.client.message.ObjectWrapperType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapperType type() const;
  inline void set_type(org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapperType value);
  
  // required bytes binary = 2;
  inline bool has_binary() const;
  inline void clear_binary();
  static const int kBinaryFieldNumber = 2;
  inline const ::std::string& binary() const;
  inline void set_binary(const ::std::string& value);
  inline void set_binary(const char* value);
  inline void set_binary(const void* value, size_t size);
  inline ::std::string* mutable_binary();
  inline ::std::string* release_binary();
  
  // @@protoc_insertion_point(class_scope:org.gridgain.grid.kernal.processors.rest.client.message.ObjectWrapper)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_binary();
  inline void clear_has_binary();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* binary_;
  int type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ClientMessages_2eproto();
  friend void protobuf_AssignDesc_ClientMessages_2eproto();
  friend void protobuf_ShutdownFile_ClientMessages_2eproto();
  
  void InitAsDefaultInstance();
  static ObjectWrapper* default_instance_;
};
// -------------------------------------------------------------------

class Collection : public ::google::protobuf::Message {
 public:
  Collection();
  virtual ~Collection();
  
  Collection(const Collection& from);
  
  inline Collection& operator=(const Collection& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Collection& default_instance();
  
  void Swap(Collection* other);
  
  // implements Message ----------------------------------------------
  
  Collection* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Collection& from);
  void MergeFrom(const Collection& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .org.gridgain.grid.kernal.processors.rest.client.message.ObjectWrapper item = 1;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline const ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper& item(int index) const;
  inline ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* mutable_item(int index);
  inline ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper >*
      mutable_item();
  
  // @@protoc_insertion_point(class_scope:org.gridgain.grid.kernal.processors.rest.client.message.Collection)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper > item_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ClientMessages_2eproto();
  friend void protobuf_AssignDesc_ClientMessages_2eproto();
  friend void protobuf_ShutdownFile_ClientMessages_2eproto();
  
  void InitAsDefaultInstance();
  static Collection* default_instance_;
};
// -------------------------------------------------------------------

class KeyValue : public ::google::protobuf::Message {
 public:
  KeyValue();
  virtual ~KeyValue();
  
  KeyValue(const KeyValue& from);
  
  inline KeyValue& operator=(const KeyValue& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const KeyValue& default_instance();
  
  void Swap(KeyValue* other);
  
  // implements Message ----------------------------------------------
  
  KeyValue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KeyValue& from);
  void MergeFrom(const KeyValue& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .org.gridgain.grid.kernal.processors.rest.client.message.ObjectWrapper key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper& key() const;
  inline ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* mutable_key();
  inline ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* release_key();
  
  // required .org.gridgain.grid.kernal.processors.rest.client.message.ObjectWrapper value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper& value() const;
  inline ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* mutable_value();
  inline ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* release_value();
  
  // @@protoc_insertion_point(class_scope:org.gridgain.grid.kernal.processors.rest.client.message.KeyValue)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* key_;
  ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ClientMessages_2eproto();
  friend void protobuf_AssignDesc_ClientMessages_2eproto();
  friend void protobuf_ShutdownFile_ClientMessages_2eproto();
  
  void InitAsDefaultInstance();
  static KeyValue* default_instance_;
};
// -------------------------------------------------------------------

class Map : public ::google::protobuf::Message {
 public:
  Map();
  virtual ~Map();
  
  Map(const Map& from);
  
  inline Map& operator=(const Map& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Map& default_instance();
  
  void Swap(Map* other);
  
  // implements Message ----------------------------------------------
  
  Map* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Map& from);
  void MergeFrom(const Map& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .org.gridgain.grid.kernal.processors.rest.client.message.KeyValue entry = 1;
  inline int entry_size() const;
  inline void clear_entry();
  static const int kEntryFieldNumber = 1;
  inline const ::org::gridgain::grid::kernal::processors::rest::client::message::KeyValue& entry(int index) const;
  inline ::org::gridgain::grid::kernal::processors::rest::client::message::KeyValue* mutable_entry(int index);
  inline ::org::gridgain::grid::kernal::processors::rest::client::message::KeyValue* add_entry();
  inline const ::google::protobuf::RepeatedPtrField< ::org::gridgain::grid::kernal::processors::rest::client::message::KeyValue >&
      entry() const;
  inline ::google::protobuf::RepeatedPtrField< ::org::gridgain::grid::kernal::processors::rest::client::message::KeyValue >*
      mutable_entry();
  
  // @@protoc_insertion_point(class_scope:org.gridgain.grid.kernal.processors.rest.client.message.Map)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::org::gridgain::grid::kernal::processors::rest::client::message::KeyValue > entry_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ClientMessages_2eproto();
  friend void protobuf_AssignDesc_ClientMessages_2eproto();
  friend void protobuf_ShutdownFile_ClientMessages_2eproto();
  
  void InitAsDefaultInstance();
  static Map* default_instance_;
};
// -------------------------------------------------------------------

class ProtoRequest : public ::google::protobuf::Message {
 public:
  ProtoRequest();
  virtual ~ProtoRequest();
  
  ProtoRequest(const ProtoRequest& from);
  
  inline ProtoRequest& operator=(const ProtoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoRequest& default_instance();
  
  void Swap(ProtoRequest* other);
  
  // implements Message ----------------------------------------------
  
  ProtoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoRequest& from);
  void MergeFrom(const ProtoRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bytes body = 1;
  inline bool has_body() const;
  inline void clear_body();
  static const int kBodyFieldNumber = 1;
  inline const ::std::string& body() const;
  inline void set_body(const ::std::string& value);
  inline void set_body(const char* value);
  inline void set_body(const void* value, size_t size);
  inline ::std::string* mutable_body();
  inline ::std::string* release_body();
  
  // optional bytes sessionToken = 2;
  inline bool has_sessiontoken() const;
  inline void clear_sessiontoken();
  static const int kSessionTokenFieldNumber = 2;
  inline const ::std::string& sessiontoken() const;
  inline void set_sessiontoken(const ::std::string& value);
  inline void set_sessiontoken(const char* value);
  inline void set_sessiontoken(const void* value, size_t size);
  inline ::std::string* mutable_sessiontoken();
  inline ::std::string* release_sessiontoken();
  
  // @@protoc_insertion_point(class_scope:org.gridgain.grid.kernal.processors.rest.client.message.ProtoRequest)
 private:
  inline void set_has_body();
  inline void clear_has_body();
  inline void set_has_sessiontoken();
  inline void clear_has_sessiontoken();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* body_;
  ::std::string* sessiontoken_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ClientMessages_2eproto();
  friend void protobuf_AssignDesc_ClientMessages_2eproto();
  friend void protobuf_ShutdownFile_ClientMessages_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProtoAuthenticationRequest : public ::google::protobuf::Message {
 public:
  ProtoAuthenticationRequest();
  virtual ~ProtoAuthenticationRequest();
  
  ProtoAuthenticationRequest(const ProtoAuthenticationRequest& from);
  
  inline ProtoAuthenticationRequest& operator=(const ProtoAuthenticationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoAuthenticationRequest& default_instance();
  
  void Swap(ProtoAuthenticationRequest* other);
  
  // implements Message ----------------------------------------------
  
  ProtoAuthenticationRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoAuthenticationRequest& from);
  void MergeFrom(const ProtoAuthenticationRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .org.gridgain.grid.kernal.processors.rest.client.message.ObjectWrapper credentials = 1;
  inline bool has_credentials() const;
  inline void clear_credentials();
  static const int kCredentialsFieldNumber = 1;
  inline const ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper& credentials() const;
  inline ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* mutable_credentials();
  inline ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* release_credentials();
  
  // @@protoc_insertion_point(class_scope:org.gridgain.grid.kernal.processors.rest.client.message.ProtoAuthenticationRequest)
 private:
  inline void set_has_credentials();
  inline void clear_has_credentials();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* credentials_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ClientMessages_2eproto();
  friend void protobuf_AssignDesc_ClientMessages_2eproto();
  friend void protobuf_ShutdownFile_ClientMessages_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoAuthenticationRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProtoCacheRequest : public ::google::protobuf::Message {
 public:
  ProtoCacheRequest();
  virtual ~ProtoCacheRequest();
  
  ProtoCacheRequest(const ProtoCacheRequest& from);
  
  inline ProtoCacheRequest& operator=(const ProtoCacheRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoCacheRequest& default_instance();
  
  void Swap(ProtoCacheRequest* other);
  
  // implements Message ----------------------------------------------
  
  ProtoCacheRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoCacheRequest& from);
  void MergeFrom(const ProtoCacheRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef ProtoCacheRequest_GridCacheOperation GridCacheOperation;
  static const GridCacheOperation PUT = ProtoCacheRequest_GridCacheOperation_PUT;
  static const GridCacheOperation PUT_ALL = ProtoCacheRequest_GridCacheOperation_PUT_ALL;
  static const GridCacheOperation GET = ProtoCacheRequest_GridCacheOperation_GET;
  static const GridCacheOperation GET_ALL = ProtoCacheRequest_GridCacheOperation_GET_ALL;
  static const GridCacheOperation RMV = ProtoCacheRequest_GridCacheOperation_RMV;
  static const GridCacheOperation RMV_ALL = ProtoCacheRequest_GridCacheOperation_RMV_ALL;
  static const GridCacheOperation REPLACE = ProtoCacheRequest_GridCacheOperation_REPLACE;
  static const GridCacheOperation CAS = ProtoCacheRequest_GridCacheOperation_CAS;
  static const GridCacheOperation METRICS = ProtoCacheRequest_GridCacheOperation_METRICS;
  static const GridCacheOperation APPEND = ProtoCacheRequest_GridCacheOperation_APPEND;
  static const GridCacheOperation PREPEND = ProtoCacheRequest_GridCacheOperation_PREPEND;
  static inline bool GridCacheOperation_IsValid(int value) {
    return ProtoCacheRequest_GridCacheOperation_IsValid(value);
  }
  static const GridCacheOperation GridCacheOperation_MIN =
    ProtoCacheRequest_GridCacheOperation_GridCacheOperation_MIN;
  static const GridCacheOperation GridCacheOperation_MAX =
    ProtoCacheRequest_GridCacheOperation_GridCacheOperation_MAX;
  static const int GridCacheOperation_ARRAYSIZE =
    ProtoCacheRequest_GridCacheOperation_GridCacheOperation_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  GridCacheOperation_descriptor() {
    return ProtoCacheRequest_GridCacheOperation_descriptor();
  }
  static inline const ::std::string& GridCacheOperation_Name(GridCacheOperation value) {
    return ProtoCacheRequest_GridCacheOperation_Name(value);
  }
  static inline bool GridCacheOperation_Parse(const ::std::string& name,
      GridCacheOperation* value) {
    return ProtoCacheRequest_GridCacheOperation_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required .org.gridgain.grid.kernal.processors.rest.client.message.ProtoCacheRequest.GridCacheOperation operation = 3;
  inline bool has_operation() const;
  inline void clear_operation();
  static const int kOperationFieldNumber = 3;
  inline ::org::gridgain::grid::kernal::processors::rest::client::message::ProtoCacheRequest_GridCacheOperation operation() const;
  inline void set_operation(::org::gridgain::grid::kernal::processors::rest::client::message::ProtoCacheRequest_GridCacheOperation value);
  
  // optional string cacheName = 4;
  inline bool has_cachename() const;
  inline void clear_cachename();
  static const int kCacheNameFieldNumber = 4;
  inline const ::std::string& cachename() const;
  inline void set_cachename(const ::std::string& value);
  inline void set_cachename(const char* value);
  inline void set_cachename(const char* value, size_t size);
  inline ::std::string* mutable_cachename();
  inline ::std::string* release_cachename();
  
  // optional .org.gridgain.grid.kernal.processors.rest.client.message.ObjectWrapper key = 5;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 5;
  inline const ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper& key() const;
  inline ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* mutable_key();
  inline ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* release_key();
  
  // optional .org.gridgain.grid.kernal.processors.rest.client.message.ObjectWrapper value = 6;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 6;
  inline const ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper& value() const;
  inline ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* mutable_value();
  inline ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* release_value();
  
  // optional .org.gridgain.grid.kernal.processors.rest.client.message.ObjectWrapper value2 = 7;
  inline bool has_value2() const;
  inline void clear_value2();
  static const int kValue2FieldNumber = 7;
  inline const ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper& value2() const;
  inline ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* mutable_value2();
  inline ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* release_value2();
  
  // optional .org.gridgain.grid.kernal.processors.rest.client.message.Map values = 8;
  inline bool has_values() const;
  inline void clear_values();
  static const int kValuesFieldNumber = 8;
  inline const ::org::gridgain::grid::kernal::processors::rest::client::message::Map& values() const;
  inline ::org::gridgain::grid::kernal::processors::rest::client::message::Map* mutable_values();
  inline ::org::gridgain::grid::kernal::processors::rest::client::message::Map* release_values();
  
  // optional int32 cacheFlagsOn = 9;
  inline bool has_cacheflagson() const;
  inline void clear_cacheflagson();
  static const int kCacheFlagsOnFieldNumber = 9;
  inline ::google::protobuf::int32 cacheflagson() const;
  inline void set_cacheflagson(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:org.gridgain.grid.kernal.processors.rest.client.message.ProtoCacheRequest)
 private:
  inline void set_has_operation();
  inline void clear_has_operation();
  inline void set_has_cachename();
  inline void clear_has_cachename();
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_value2();
  inline void clear_has_value2();
  inline void set_has_values();
  inline void clear_has_values();
  inline void set_has_cacheflagson();
  inline void clear_has_cacheflagson();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* cachename_;
  ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* key_;
  ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* value_;
  int operation_;
  ::google::protobuf::int32 cacheflagson_;
  ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* value2_;
  ::org::gridgain::grid::kernal::processors::rest::client::message::Map* values_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void  protobuf_AddDesc_ClientMessages_2eproto();
  friend void protobuf_AssignDesc_ClientMessages_2eproto();
  friend void protobuf_ShutdownFile_ClientMessages_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoCacheRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProtoLogRequest : public ::google::protobuf::Message {
 public:
  ProtoLogRequest();
  virtual ~ProtoLogRequest();
  
  ProtoLogRequest(const ProtoLogRequest& from);
  
  inline ProtoLogRequest& operator=(const ProtoLogRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoLogRequest& default_instance();
  
  void Swap(ProtoLogRequest* other);
  
  // implements Message ----------------------------------------------
  
  ProtoLogRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoLogRequest& from);
  void MergeFrom(const ProtoLogRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string path = 3;
  inline bool has_path() const;
  inline void clear_path();
  static const int kPathFieldNumber = 3;
  inline const ::std::string& path() const;
  inline void set_path(const ::std::string& value);
  inline void set_path(const char* value);
  inline void set_path(const char* value, size_t size);
  inline ::std::string* mutable_path();
  inline ::std::string* release_path();
  
  // optional int32 from = 4;
  inline bool has_from() const;
  inline void clear_from();
  static const int kFromFieldNumber = 4;
  inline ::google::protobuf::int32 from() const;
  inline void set_from(::google::protobuf::int32 value);
  
  // optional int32 to = 5;
  inline bool has_to() const;
  inline void clear_to();
  static const int kToFieldNumber = 5;
  inline ::google::protobuf::int32 to() const;
  inline void set_to(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:org.gridgain.grid.kernal.processors.rest.client.message.ProtoLogRequest)
 private:
  inline void set_has_path();
  inline void clear_has_path();
  inline void set_has_from();
  inline void clear_has_from();
  inline void set_has_to();
  inline void clear_has_to();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* path_;
  ::google::protobuf::int32 from_;
  ::google::protobuf::int32 to_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_ClientMessages_2eproto();
  friend void protobuf_AssignDesc_ClientMessages_2eproto();
  friend void protobuf_ShutdownFile_ClientMessages_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoLogRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProtoTaskRequest : public ::google::protobuf::Message {
 public:
  ProtoTaskRequest();
  virtual ~ProtoTaskRequest();
  
  ProtoTaskRequest(const ProtoTaskRequest& from);
  
  inline ProtoTaskRequest& operator=(const ProtoTaskRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoTaskRequest& default_instance();
  
  void Swap(ProtoTaskRequest* other);
  
  // implements Message ----------------------------------------------
  
  ProtoTaskRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoTaskRequest& from);
  void MergeFrom(const ProtoTaskRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string taskName = 3;
  inline bool has_taskname() const;
  inline void clear_taskname();
  static const int kTaskNameFieldNumber = 3;
  inline const ::std::string& taskname() const;
  inline void set_taskname(const ::std::string& value);
  inline void set_taskname(const char* value);
  inline void set_taskname(const char* value, size_t size);
  inline ::std::string* mutable_taskname();
  inline ::std::string* release_taskname();
  
  // required .org.gridgain.grid.kernal.processors.rest.client.message.ObjectWrapper argument = 4;
  inline bool has_argument() const;
  inline void clear_argument();
  static const int kArgumentFieldNumber = 4;
  inline const ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper& argument() const;
  inline ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* mutable_argument();
  inline ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* release_argument();
  
  // @@protoc_insertion_point(class_scope:org.gridgain.grid.kernal.processors.rest.client.message.ProtoTaskRequest)
 private:
  inline void set_has_taskname();
  inline void clear_has_taskname();
  inline void set_has_argument();
  inline void clear_has_argument();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* taskname_;
  ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* argument_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ClientMessages_2eproto();
  friend void protobuf_AssignDesc_ClientMessages_2eproto();
  friend void protobuf_ShutdownFile_ClientMessages_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoTaskRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProtoTopologyRequest : public ::google::protobuf::Message {
 public:
  ProtoTopologyRequest();
  virtual ~ProtoTopologyRequest();
  
  ProtoTopologyRequest(const ProtoTopologyRequest& from);
  
  inline ProtoTopologyRequest& operator=(const ProtoTopologyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoTopologyRequest& default_instance();
  
  void Swap(ProtoTopologyRequest* other);
  
  // implements Message ----------------------------------------------
  
  ProtoTopologyRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoTopologyRequest& from);
  void MergeFrom(const ProtoTopologyRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool includeAttributes = 3;
  inline bool has_includeattributes() const;
  inline void clear_includeattributes();
  static const int kIncludeAttributesFieldNumber = 3;
  inline bool includeattributes() const;
  inline void set_includeattributes(bool value);
  
  // required bool includeMetrics = 4;
  inline bool has_includemetrics() const;
  inline void clear_includemetrics();
  static const int kIncludeMetricsFieldNumber = 4;
  inline bool includemetrics() const;
  inline void set_includemetrics(bool value);
  
  // optional string nodeId = 5;
  inline bool has_nodeid() const;
  inline void clear_nodeid();
  static const int kNodeIdFieldNumber = 5;
  inline const ::std::string& nodeid() const;
  inline void set_nodeid(const ::std::string& value);
  inline void set_nodeid(const char* value);
  inline void set_nodeid(const char* value, size_t size);
  inline ::std::string* mutable_nodeid();
  inline ::std::string* release_nodeid();
  
  // optional string nodeIp = 6;
  inline bool has_nodeip() const;
  inline void clear_nodeip();
  static const int kNodeIpFieldNumber = 6;
  inline const ::std::string& nodeip() const;
  inline void set_nodeip(const ::std::string& value);
  inline void set_nodeip(const char* value);
  inline void set_nodeip(const char* value, size_t size);
  inline ::std::string* mutable_nodeip();
  inline ::std::string* release_nodeip();
  
  // @@protoc_insertion_point(class_scope:org.gridgain.grid.kernal.processors.rest.client.message.ProtoTopologyRequest)
 private:
  inline void set_has_includeattributes();
  inline void clear_has_includeattributes();
  inline void set_has_includemetrics();
  inline void clear_has_includemetrics();
  inline void set_has_nodeid();
  inline void clear_has_nodeid();
  inline void set_has_nodeip();
  inline void clear_has_nodeip();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* nodeid_;
  ::std::string* nodeip_;
  bool includeattributes_;
  bool includemetrics_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_ClientMessages_2eproto();
  friend void protobuf_AssignDesc_ClientMessages_2eproto();
  friend void protobuf_ShutdownFile_ClientMessages_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoTopologyRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProtoResponse : public ::google::protobuf::Message {
 public:
  ProtoResponse();
  virtual ~ProtoResponse();
  
  ProtoResponse(const ProtoResponse& from);
  
  inline ProtoResponse& operator=(const ProtoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoResponse& default_instance();
  
  void Swap(ProtoResponse* other);
  
  // implements Message ----------------------------------------------
  
  ProtoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoResponse& from);
  void MergeFrom(const ProtoResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);
  
  // optional string errorMessage = 2;
  inline bool has_errormessage() const;
  inline void clear_errormessage();
  static const int kErrorMessageFieldNumber = 2;
  inline const ::std::string& errormessage() const;
  inline void set_errormessage(const ::std::string& value);
  inline void set_errormessage(const char* value);
  inline void set_errormessage(const char* value, size_t size);
  inline ::std::string* mutable_errormessage();
  inline ::std::string* release_errormessage();
  
  // optional .org.gridgain.grid.kernal.processors.rest.client.message.ObjectWrapper resultBean = 3;
  inline bool has_resultbean() const;
  inline void clear_resultbean();
  static const int kResultBeanFieldNumber = 3;
  inline const ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper& resultbean() const;
  inline ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* mutable_resultbean();
  inline ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* release_resultbean();
  
  // optional bytes sessionToken = 4;
  inline bool has_sessiontoken() const;
  inline void clear_sessiontoken();
  static const int kSessionTokenFieldNumber = 4;
  inline const ::std::string& sessiontoken() const;
  inline void set_sessiontoken(const ::std::string& value);
  inline void set_sessiontoken(const char* value);
  inline void set_sessiontoken(const void* value, size_t size);
  inline ::std::string* mutable_sessiontoken();
  inline ::std::string* release_sessiontoken();
  
  // @@protoc_insertion_point(class_scope:org.gridgain.grid.kernal.processors.rest.client.message.ProtoResponse)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_errormessage();
  inline void clear_has_errormessage();
  inline void set_has_resultbean();
  inline void clear_has_resultbean();
  inline void set_has_sessiontoken();
  inline void clear_has_sessiontoken();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* errormessage_;
  ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* resultbean_;
  ::std::string* sessiontoken_;
  ::google::protobuf::int32 status_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_ClientMessages_2eproto();
  friend void protobuf_AssignDesc_ClientMessages_2eproto();
  friend void protobuf_ShutdownFile_ClientMessages_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProtoTaskBean : public ::google::protobuf::Message {
 public:
  ProtoTaskBean();
  virtual ~ProtoTaskBean();
  
  ProtoTaskBean(const ProtoTaskBean& from);
  
  inline ProtoTaskBean& operator=(const ProtoTaskBean& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoTaskBean& default_instance();
  
  void Swap(ProtoTaskBean* other);
  
  // implements Message ----------------------------------------------
  
  ProtoTaskBean* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoTaskBean& from);
  void MergeFrom(const ProtoTaskBean& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string taskId = 2;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIdFieldNumber = 2;
  inline const ::std::string& taskid() const;
  inline void set_taskid(const ::std::string& value);
  inline void set_taskid(const char* value);
  inline void set_taskid(const char* value, size_t size);
  inline ::std::string* mutable_taskid();
  inline ::std::string* release_taskid();
  
  // required bool finished = 3;
  inline bool has_finished() const;
  inline void clear_finished();
  static const int kFinishedFieldNumber = 3;
  inline bool finished() const;
  inline void set_finished(bool value);
  
  // optional .org.gridgain.grid.kernal.processors.rest.client.message.ObjectWrapper resultBean = 4;
  inline bool has_resultbean() const;
  inline void clear_resultbean();
  static const int kResultBeanFieldNumber = 4;
  inline const ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper& resultbean() const;
  inline ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* mutable_resultbean();
  inline ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* release_resultbean();
  
  // optional string error = 5;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 5;
  inline const ::std::string& error() const;
  inline void set_error(const ::std::string& value);
  inline void set_error(const char* value);
  inline void set_error(const char* value, size_t size);
  inline ::std::string* mutable_error();
  inline ::std::string* release_error();
  
  // @@protoc_insertion_point(class_scope:org.gridgain.grid.kernal.processors.rest.client.message.ProtoTaskBean)
 private:
  inline void set_has_taskid();
  inline void clear_has_taskid();
  inline void set_has_finished();
  inline void clear_has_finished();
  inline void set_has_resultbean();
  inline void clear_has_resultbean();
  inline void set_has_error();
  inline void clear_has_error();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* taskid_;
  ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* resultbean_;
  ::std::string* error_;
  bool finished_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_ClientMessages_2eproto();
  friend void protobuf_AssignDesc_ClientMessages_2eproto();
  friend void protobuf_ShutdownFile_ClientMessages_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoTaskBean* default_instance_;
};
// -------------------------------------------------------------------

class ProtoNodeMetricsBean : public ::google::protobuf::Message {
 public:
  ProtoNodeMetricsBean();
  virtual ~ProtoNodeMetricsBean();
  
  ProtoNodeMetricsBean(const ProtoNodeMetricsBean& from);
  
  inline ProtoNodeMetricsBean& operator=(const ProtoNodeMetricsBean& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoNodeMetricsBean& default_instance();
  
  void Swap(ProtoNodeMetricsBean* other);
  
  // implements Message ----------------------------------------------
  
  ProtoNodeMetricsBean* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoNodeMetricsBean& from);
  void MergeFrom(const ProtoNodeMetricsBean& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int64 lastUpdateTime = 1 [default = -1];
  inline bool has_lastupdatetime() const;
  inline void clear_lastupdatetime();
  static const int kLastUpdateTimeFieldNumber = 1;
  inline ::google::protobuf::int64 lastupdatetime() const;
  inline void set_lastupdatetime(::google::protobuf::int64 value);
  
  // required int32 maximumActiveJobs = 2 [default = -1];
  inline bool has_maximumactivejobs() const;
  inline void clear_maximumactivejobs();
  static const int kMaximumActiveJobsFieldNumber = 2;
  inline ::google::protobuf::int32 maximumactivejobs() const;
  inline void set_maximumactivejobs(::google::protobuf::int32 value);
  
  // required int32 currentActiveJobs = 3 [default = -1];
  inline bool has_currentactivejobs() const;
  inline void clear_currentactivejobs();
  static const int kCurrentActiveJobsFieldNumber = 3;
  inline ::google::protobuf::int32 currentactivejobs() const;
  inline void set_currentactivejobs(::google::protobuf::int32 value);
  
  // required float averageActiveJobs = 4 [default = -1];
  inline bool has_averageactivejobs() const;
  inline void clear_averageactivejobs();
  static const int kAverageActiveJobsFieldNumber = 4;
  inline float averageactivejobs() const;
  inline void set_averageactivejobs(float value);
  
  // required int32 maximumWaitingJobs = 5 [default = -1];
  inline bool has_maximumwaitingjobs() const;
  inline void clear_maximumwaitingjobs();
  static const int kMaximumWaitingJobsFieldNumber = 5;
  inline ::google::protobuf::int32 maximumwaitingjobs() const;
  inline void set_maximumwaitingjobs(::google::protobuf::int32 value);
  
  // required int32 currentWaitingJobs = 6 [default = -1];
  inline bool has_currentwaitingjobs() const;
  inline void clear_currentwaitingjobs();
  static const int kCurrentWaitingJobsFieldNumber = 6;
  inline ::google::protobuf::int32 currentwaitingjobs() const;
  inline void set_currentwaitingjobs(::google::protobuf::int32 value);
  
  // required float averageWaitingJobs = 7 [default = -1];
  inline bool has_averagewaitingjobs() const;
  inline void clear_averagewaitingjobs();
  static const int kAverageWaitingJobsFieldNumber = 7;
  inline float averagewaitingjobs() const;
  inline void set_averagewaitingjobs(float value);
  
  // required int32 maximumRejectedJobs = 8 [default = -1];
  inline bool has_maximumrejectedjobs() const;
  inline void clear_maximumrejectedjobs();
  static const int kMaximumRejectedJobsFieldNumber = 8;
  inline ::google::protobuf::int32 maximumrejectedjobs() const;
  inline void set_maximumrejectedjobs(::google::protobuf::int32 value);
  
  // required int32 currentRejectedJobs = 9 [default = -1];
  inline bool has_currentrejectedjobs() const;
  inline void clear_currentrejectedjobs();
  static const int kCurrentRejectedJobsFieldNumber = 9;
  inline ::google::protobuf::int32 currentrejectedjobs() const;
  inline void set_currentrejectedjobs(::google::protobuf::int32 value);
  
  // required float averageRejectedJobs = 10 [default = -1];
  inline bool has_averagerejectedjobs() const;
  inline void clear_averagerejectedjobs();
  static const int kAverageRejectedJobsFieldNumber = 10;
  inline float averagerejectedjobs() const;
  inline void set_averagerejectedjobs(float value);
  
  // required int32 maximumCancelledJobs = 11 [default = -1];
  inline bool has_maximumcancelledjobs() const;
  inline void clear_maximumcancelledjobs();
  static const int kMaximumCancelledJobsFieldNumber = 11;
  inline ::google::protobuf::int32 maximumcancelledjobs() const;
  inline void set_maximumcancelledjobs(::google::protobuf::int32 value);
  
  // required int32 currentCancelledJobs = 12 [default = -1];
  inline bool has_currentcancelledjobs() const;
  inline void clear_currentcancelledjobs();
  static const int kCurrentCancelledJobsFieldNumber = 12;
  inline ::google::protobuf::int32 currentcancelledjobs() const;
  inline void set_currentcancelledjobs(::google::protobuf::int32 value);
  
  // required float averageCancelledJobs = 13 [default = -1];
  inline bool has_averagecancelledjobs() const;
  inline void clear_averagecancelledjobs();
  static const int kAverageCancelledJobsFieldNumber = 13;
  inline float averagecancelledjobs() const;
  inline void set_averagecancelledjobs(float value);
  
  // required int32 totalRejectedJobs = 14 [default = -1];
  inline bool has_totalrejectedjobs() const;
  inline void clear_totalrejectedjobs();
  static const int kTotalRejectedJobsFieldNumber = 14;
  inline ::google::protobuf::int32 totalrejectedjobs() const;
  inline void set_totalrejectedjobs(::google::protobuf::int32 value);
  
  // required int32 totalCancelledJobs = 15 [default = -1];
  inline bool has_totalcancelledjobs() const;
  inline void clear_totalcancelledjobs();
  static const int kTotalCancelledJobsFieldNumber = 15;
  inline ::google::protobuf::int32 totalcancelledjobs() const;
  inline void set_totalcancelledjobs(::google::protobuf::int32 value);
  
  // required int32 totalExecutedJobs = 16 [default = -1];
  inline bool has_totalexecutedjobs() const;
  inline void clear_totalexecutedjobs();
  static const int kTotalExecutedJobsFieldNumber = 16;
  inline ::google::protobuf::int32 totalexecutedjobs() const;
  inline void set_totalexecutedjobs(::google::protobuf::int32 value);
  
  // required int64 maximumJobWaitTime = 17 [default = -1];
  inline bool has_maximumjobwaittime() const;
  inline void clear_maximumjobwaittime();
  static const int kMaximumJobWaitTimeFieldNumber = 17;
  inline ::google::protobuf::int64 maximumjobwaittime() const;
  inline void set_maximumjobwaittime(::google::protobuf::int64 value);
  
  // required int64 currentJobWaitTime = 18 [default = -1];
  inline bool has_currentjobwaittime() const;
  inline void clear_currentjobwaittime();
  static const int kCurrentJobWaitTimeFieldNumber = 18;
  inline ::google::protobuf::int64 currentjobwaittime() const;
  inline void set_currentjobwaittime(::google::protobuf::int64 value);
  
  // required double averageJobWaitTime = 19 [default = -1];
  inline bool has_averagejobwaittime() const;
  inline void clear_averagejobwaittime();
  static const int kAverageJobWaitTimeFieldNumber = 19;
  inline double averagejobwaittime() const;
  inline void set_averagejobwaittime(double value);
  
  // required int64 maximumJobExecuteTime = 20 [default = -1];
  inline bool has_maximumjobexecutetime() const;
  inline void clear_maximumjobexecutetime();
  static const int kMaximumJobExecuteTimeFieldNumber = 20;
  inline ::google::protobuf::int64 maximumjobexecutetime() const;
  inline void set_maximumjobexecutetime(::google::protobuf::int64 value);
  
  // required int64 currentJobExecuteTime = 21 [default = -1];
  inline bool has_currentjobexecutetime() const;
  inline void clear_currentjobexecutetime();
  static const int kCurrentJobExecuteTimeFieldNumber = 21;
  inline ::google::protobuf::int64 currentjobexecutetime() const;
  inline void set_currentjobexecutetime(::google::protobuf::int64 value);
  
  // required double averageJobExecuteTime = 22 [default = -1];
  inline bool has_averagejobexecutetime() const;
  inline void clear_averagejobexecutetime();
  static const int kAverageJobExecuteTimeFieldNumber = 22;
  inline double averagejobexecutetime() const;
  inline void set_averagejobexecutetime(double value);
  
  // required int64 totalIdleTime = 23 [default = -1];
  inline bool has_totalidletime() const;
  inline void clear_totalidletime();
  static const int kTotalIdleTimeFieldNumber = 23;
  inline ::google::protobuf::int64 totalidletime() const;
  inline void set_totalidletime(::google::protobuf::int64 value);
  
  // required int64 currentIdleTime = 24 [default = -1];
  inline bool has_currentidletime() const;
  inline void clear_currentidletime();
  static const int kCurrentIdleTimeFieldNumber = 24;
  inline ::google::protobuf::int64 currentidletime() const;
  inline void set_currentidletime(::google::protobuf::int64 value);
  
  // required int32 totalCpus = 25 [default = -1];
  inline bool has_totalcpus() const;
  inline void clear_totalcpus();
  static const int kTotalCpusFieldNumber = 25;
  inline ::google::protobuf::int32 totalcpus() const;
  inline void set_totalcpus(::google::protobuf::int32 value);
  
  // required double currentCpuLoad = 26 [default = -1];
  inline bool has_currentcpuload() const;
  inline void clear_currentcpuload();
  static const int kCurrentCpuLoadFieldNumber = 26;
  inline double currentcpuload() const;
  inline void set_currentcpuload(double value);
  
  // required double averageCpuLoad = 27 [default = -1];
  inline bool has_averagecpuload() const;
  inline void clear_averagecpuload();
  static const int kAverageCpuLoadFieldNumber = 27;
  inline double averagecpuload() const;
  inline void set_averagecpuload(double value);
  
  // required int64 heapMemoryInitialized = 28 [default = -1];
  inline bool has_heapmemoryinitialized() const;
  inline void clear_heapmemoryinitialized();
  static const int kHeapMemoryInitializedFieldNumber = 28;
  inline ::google::protobuf::int64 heapmemoryinitialized() const;
  inline void set_heapmemoryinitialized(::google::protobuf::int64 value);
  
  // required int64 heapMemoryUsed = 29 [default = -1];
  inline bool has_heapmemoryused() const;
  inline void clear_heapmemoryused();
  static const int kHeapMemoryUsedFieldNumber = 29;
  inline ::google::protobuf::int64 heapmemoryused() const;
  inline void set_heapmemoryused(::google::protobuf::int64 value);
  
  // required int64 heapMemoryCommitted = 30 [default = -1];
  inline bool has_heapmemorycommitted() const;
  inline void clear_heapmemorycommitted();
  static const int kHeapMemoryCommittedFieldNumber = 30;
  inline ::google::protobuf::int64 heapmemorycommitted() const;
  inline void set_heapmemorycommitted(::google::protobuf::int64 value);
  
  // required int64 heapMemoryMaximum = 31 [default = -1];
  inline bool has_heapmemorymaximum() const;
  inline void clear_heapmemorymaximum();
  static const int kHeapMemoryMaximumFieldNumber = 31;
  inline ::google::protobuf::int64 heapmemorymaximum() const;
  inline void set_heapmemorymaximum(::google::protobuf::int64 value);
  
  // required int64 nonHeapMemoryInitialized = 32 [default = -1];
  inline bool has_nonheapmemoryinitialized() const;
  inline void clear_nonheapmemoryinitialized();
  static const int kNonHeapMemoryInitializedFieldNumber = 32;
  inline ::google::protobuf::int64 nonheapmemoryinitialized() const;
  inline void set_nonheapmemoryinitialized(::google::protobuf::int64 value);
  
  // required int64 nonHeapMemoryUsed = 33 [default = -1];
  inline bool has_nonheapmemoryused() const;
  inline void clear_nonheapmemoryused();
  static const int kNonHeapMemoryUsedFieldNumber = 33;
  inline ::google::protobuf::int64 nonheapmemoryused() const;
  inline void set_nonheapmemoryused(::google::protobuf::int64 value);
  
  // required int64 nonHeapMemoryCommitted = 34 [default = -1];
  inline bool has_nonheapmemorycommitted() const;
  inline void clear_nonheapmemorycommitted();
  static const int kNonHeapMemoryCommittedFieldNumber = 34;
  inline ::google::protobuf::int64 nonheapmemorycommitted() const;
  inline void set_nonheapmemorycommitted(::google::protobuf::int64 value);
  
  // required int64 nonHeapMemoryMaximum = 35 [default = -1];
  inline bool has_nonheapmemorymaximum() const;
  inline void clear_nonheapmemorymaximum();
  static const int kNonHeapMemoryMaximumFieldNumber = 35;
  inline ::google::protobuf::int64 nonheapmemorymaximum() const;
  inline void set_nonheapmemorymaximum(::google::protobuf::int64 value);
  
  // required int64 upTime = 36 [default = -1];
  inline bool has_uptime() const;
  inline void clear_uptime();
  static const int kUpTimeFieldNumber = 36;
  inline ::google::protobuf::int64 uptime() const;
  inline void set_uptime(::google::protobuf::int64 value);
  
  // required int64 startTime = 37 [default = -1];
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStartTimeFieldNumber = 37;
  inline ::google::protobuf::int64 starttime() const;
  inline void set_starttime(::google::protobuf::int64 value);
  
  // required int64 nodeStartTime = 38 [default = -1];
  inline bool has_nodestarttime() const;
  inline void clear_nodestarttime();
  static const int kNodeStartTimeFieldNumber = 38;
  inline ::google::protobuf::int64 nodestarttime() const;
  inline void set_nodestarttime(::google::protobuf::int64 value);
  
  // required int32 currentThreadCount = 39 [default = -1];
  inline bool has_currentthreadcount() const;
  inline void clear_currentthreadcount();
  static const int kCurrentThreadCountFieldNumber = 39;
  inline ::google::protobuf::int32 currentthreadcount() const;
  inline void set_currentthreadcount(::google::protobuf::int32 value);
  
  // required int32 maximumThreadCount = 40 [default = -1];
  inline bool has_maximumthreadcount() const;
  inline void clear_maximumthreadcount();
  static const int kMaximumThreadCountFieldNumber = 40;
  inline ::google::protobuf::int32 maximumthreadcount() const;
  inline void set_maximumthreadcount(::google::protobuf::int32 value);
  
  // required int64 totalStartedThreadCount = 41 [default = -1];
  inline bool has_totalstartedthreadcount() const;
  inline void clear_totalstartedthreadcount();
  static const int kTotalStartedThreadCountFieldNumber = 41;
  inline ::google::protobuf::int64 totalstartedthreadcount() const;
  inline void set_totalstartedthreadcount(::google::protobuf::int64 value);
  
  // required int32 currentDaemonThreadCount = 42 [default = -1];
  inline bool has_currentdaemonthreadcount() const;
  inline void clear_currentdaemonthreadcount();
  static const int kCurrentDaemonThreadCountFieldNumber = 42;
  inline ::google::protobuf::int32 currentdaemonthreadcount() const;
  inline void set_currentdaemonthreadcount(::google::protobuf::int32 value);
  
  // required int64 fileSystemFreeSpace = 43 [default = -1];
  inline bool has_filesystemfreespace() const;
  inline void clear_filesystemfreespace();
  static const int kFileSystemFreeSpaceFieldNumber = 43;
  inline ::google::protobuf::int64 filesystemfreespace() const;
  inline void set_filesystemfreespace(::google::protobuf::int64 value);
  
  // required int64 fileSystemTotalSpace = 44 [default = -1];
  inline bool has_filesystemtotalspace() const;
  inline void clear_filesystemtotalspace();
  static const int kFileSystemTotalSpaceFieldNumber = 44;
  inline ::google::protobuf::int64 filesystemtotalspace() const;
  inline void set_filesystemtotalspace(::google::protobuf::int64 value);
  
  // required int64 fileSystemUsableSpace = 45 [default = -1];
  inline bool has_filesystemusablespace() const;
  inline void clear_filesystemusablespace();
  static const int kFileSystemUsableSpaceFieldNumber = 45;
  inline ::google::protobuf::int64 filesystemusablespace() const;
  inline void set_filesystemusablespace(::google::protobuf::int64 value);
  
  // required int64 lastDataVersion = 46 [default = -1];
  inline bool has_lastdataversion() const;
  inline void clear_lastdataversion();
  static const int kLastDataVersionFieldNumber = 46;
  inline ::google::protobuf::int64 lastdataversion() const;
  inline void set_lastdataversion(::google::protobuf::int64 value);
  
  // optional double currentGcCpuLoad = 47 [default = -1];
  inline bool has_currentgccpuload() const;
  inline void clear_currentgccpuload();
  static const int kCurrentGcCpuLoadFieldNumber = 47;
  inline double currentgccpuload() const;
  inline void set_currentgccpuload(double value);
  
  // optional int32 totalExecutedTasks = 48 [default = -1];
  inline bool has_totalexecutedtasks() const;
  inline void clear_totalexecutedtasks();
  static const int kTotalExecutedTasksFieldNumber = 48;
  inline ::google::protobuf::int32 totalexecutedtasks() const;
  inline void set_totalexecutedtasks(::google::protobuf::int32 value);
  
  // optional int32 sentMessagesCount = 49 [default = -1];
  inline bool has_sentmessagescount() const;
  inline void clear_sentmessagescount();
  static const int kSentMessagesCountFieldNumber = 49;
  inline ::google::protobuf::int32 sentmessagescount() const;
  inline void set_sentmessagescount(::google::protobuf::int32 value);
  
  // optional int64 sentBytesCount = 50 [default = -1];
  inline bool has_sentbytescount() const;
  inline void clear_sentbytescount();
  static const int kSentBytesCountFieldNumber = 50;
  inline ::google::protobuf::int64 sentbytescount() const;
  inline void set_sentbytescount(::google::protobuf::int64 value);
  
  // optional int32 receivedMessagesCount = 51 [default = -1];
  inline bool has_receivedmessagescount() const;
  inline void clear_receivedmessagescount();
  static const int kReceivedMessagesCountFieldNumber = 51;
  inline ::google::protobuf::int32 receivedmessagescount() const;
  inline void set_receivedmessagescount(::google::protobuf::int32 value);
  
  // optional int64 receivedBytesCount = 52 [default = -1];
  inline bool has_receivedbytescount() const;
  inline void clear_receivedbytescount();
  static const int kReceivedBytesCountFieldNumber = 52;
  inline ::google::protobuf::int64 receivedbytescount() const;
  inline void set_receivedbytescount(::google::protobuf::int64 value);
  
  // @@protoc_insertion_point(class_scope:org.gridgain.grid.kernal.processors.rest.client.message.ProtoNodeMetricsBean)
 private:
  inline void set_has_lastupdatetime();
  inline void clear_has_lastupdatetime();
  inline void set_has_maximumactivejobs();
  inline void clear_has_maximumactivejobs();
  inline void set_has_currentactivejobs();
  inline void clear_has_currentactivejobs();
  inline void set_has_averageactivejobs();
  inline void clear_has_averageactivejobs();
  inline void set_has_maximumwaitingjobs();
  inline void clear_has_maximumwaitingjobs();
  inline void set_has_currentwaitingjobs();
  inline void clear_has_currentwaitingjobs();
  inline void set_has_averagewaitingjobs();
  inline void clear_has_averagewaitingjobs();
  inline void set_has_maximumrejectedjobs();
  inline void clear_has_maximumrejectedjobs();
  inline void set_has_currentrejectedjobs();
  inline void clear_has_currentrejectedjobs();
  inline void set_has_averagerejectedjobs();
  inline void clear_has_averagerejectedjobs();
  inline void set_has_maximumcancelledjobs();
  inline void clear_has_maximumcancelledjobs();
  inline void set_has_currentcancelledjobs();
  inline void clear_has_currentcancelledjobs();
  inline void set_has_averagecancelledjobs();
  inline void clear_has_averagecancelledjobs();
  inline void set_has_totalrejectedjobs();
  inline void clear_has_totalrejectedjobs();
  inline void set_has_totalcancelledjobs();
  inline void clear_has_totalcancelledjobs();
  inline void set_has_totalexecutedjobs();
  inline void clear_has_totalexecutedjobs();
  inline void set_has_maximumjobwaittime();
  inline void clear_has_maximumjobwaittime();
  inline void set_has_currentjobwaittime();
  inline void clear_has_currentjobwaittime();
  inline void set_has_averagejobwaittime();
  inline void clear_has_averagejobwaittime();
  inline void set_has_maximumjobexecutetime();
  inline void clear_has_maximumjobexecutetime();
  inline void set_has_currentjobexecutetime();
  inline void clear_has_currentjobexecutetime();
  inline void set_has_averagejobexecutetime();
  inline void clear_has_averagejobexecutetime();
  inline void set_has_totalidletime();
  inline void clear_has_totalidletime();
  inline void set_has_currentidletime();
  inline void clear_has_currentidletime();
  inline void set_has_totalcpus();
  inline void clear_has_totalcpus();
  inline void set_has_currentcpuload();
  inline void clear_has_currentcpuload();
  inline void set_has_averagecpuload();
  inline void clear_has_averagecpuload();
  inline void set_has_heapmemoryinitialized();
  inline void clear_has_heapmemoryinitialized();
  inline void set_has_heapmemoryused();
  inline void clear_has_heapmemoryused();
  inline void set_has_heapmemorycommitted();
  inline void clear_has_heapmemorycommitted();
  inline void set_has_heapmemorymaximum();
  inline void clear_has_heapmemorymaximum();
  inline void set_has_nonheapmemoryinitialized();
  inline void clear_has_nonheapmemoryinitialized();
  inline void set_has_nonheapmemoryused();
  inline void clear_has_nonheapmemoryused();
  inline void set_has_nonheapmemorycommitted();
  inline void clear_has_nonheapmemorycommitted();
  inline void set_has_nonheapmemorymaximum();
  inline void clear_has_nonheapmemorymaximum();
  inline void set_has_uptime();
  inline void clear_has_uptime();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_nodestarttime();
  inline void clear_has_nodestarttime();
  inline void set_has_currentthreadcount();
  inline void clear_has_currentthreadcount();
  inline void set_has_maximumthreadcount();
  inline void clear_has_maximumthreadcount();
  inline void set_has_totalstartedthreadcount();
  inline void clear_has_totalstartedthreadcount();
  inline void set_has_currentdaemonthreadcount();
  inline void clear_has_currentdaemonthreadcount();
  inline void set_has_filesystemfreespace();
  inline void clear_has_filesystemfreespace();
  inline void set_has_filesystemtotalspace();
  inline void clear_has_filesystemtotalspace();
  inline void set_has_filesystemusablespace();
  inline void clear_has_filesystemusablespace();
  inline void set_has_lastdataversion();
  inline void clear_has_lastdataversion();
  inline void set_has_currentgccpuload();
  inline void clear_has_currentgccpuload();
  inline void set_has_totalexecutedtasks();
  inline void clear_has_totalexecutedtasks();
  inline void set_has_sentmessagescount();
  inline void clear_has_sentmessagescount();
  inline void set_has_sentbytescount();
  inline void clear_has_sentbytescount();
  inline void set_has_receivedmessagescount();
  inline void clear_has_receivedmessagescount();
  inline void set_has_receivedbytescount();
  inline void clear_has_receivedbytescount();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 lastupdatetime_;
  ::google::protobuf::int32 maximumactivejobs_;
  ::google::protobuf::int32 currentactivejobs_;
  float averageactivejobs_;
  ::google::protobuf::int32 maximumwaitingjobs_;
  ::google::protobuf::int32 currentwaitingjobs_;
  float averagewaitingjobs_;
  ::google::protobuf::int32 maximumrejectedjobs_;
  ::google::protobuf::int32 currentrejectedjobs_;
  float averagerejectedjobs_;
  ::google::protobuf::int32 maximumcancelledjobs_;
  ::google::protobuf::int32 currentcancelledjobs_;
  float averagecancelledjobs_;
  ::google::protobuf::int32 totalrejectedjobs_;
  ::google::protobuf::int32 totalcancelledjobs_;
  ::google::protobuf::int64 maximumjobwaittime_;
  ::google::protobuf::int64 currentjobwaittime_;
  double averagejobwaittime_;
  ::google::protobuf::int64 maximumjobexecutetime_;
  ::google::protobuf::int32 totalexecutedjobs_;
  ::google::protobuf::int32 totalcpus_;
  ::google::protobuf::int64 currentjobexecutetime_;
  double averagejobexecutetime_;
  ::google::protobuf::int64 totalidletime_;
  ::google::protobuf::int64 currentidletime_;
  double currentcpuload_;
  double averagecpuload_;
  ::google::protobuf::int64 heapmemoryinitialized_;
  ::google::protobuf::int64 heapmemoryused_;
  ::google::protobuf::int64 heapmemorycommitted_;
  ::google::protobuf::int64 heapmemorymaximum_;
  ::google::protobuf::int64 nonheapmemoryinitialized_;
  ::google::protobuf::int64 nonheapmemoryused_;
  ::google::protobuf::int64 nonheapmemorycommitted_;
  ::google::protobuf::int64 nonheapmemorymaximum_;
  ::google::protobuf::int64 uptime_;
  ::google::protobuf::int64 starttime_;
  ::google::protobuf::int64 nodestarttime_;
  ::google::protobuf::int32 currentthreadcount_;
  ::google::protobuf::int32 maximumthreadcount_;
  ::google::protobuf::int64 totalstartedthreadcount_;
  ::google::protobuf::int64 filesystemfreespace_;
  ::google::protobuf::int64 filesystemtotalspace_;
  ::google::protobuf::int64 filesystemusablespace_;
  ::google::protobuf::int32 currentdaemonthreadcount_;
  ::google::protobuf::int32 totalexecutedtasks_;
  ::google::protobuf::int64 lastdataversion_;
  double currentgccpuload_;
  ::google::protobuf::int64 sentbytescount_;
  ::google::protobuf::int32 sentmessagescount_;
  ::google::protobuf::int32 receivedmessagescount_;
  ::google::protobuf::int64 receivedbytescount_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(52 + 31) / 32];
  
  friend void  protobuf_AddDesc_ClientMessages_2eproto();
  friend void protobuf_AssignDesc_ClientMessages_2eproto();
  friend void protobuf_ShutdownFile_ClientMessages_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoNodeMetricsBean* default_instance_;
};
// -------------------------------------------------------------------

class ProtoNodeBean : public ::google::protobuf::Message {
 public:
  ProtoNodeBean();
  virtual ~ProtoNodeBean();
  
  ProtoNodeBean(const ProtoNodeBean& from);
  
  inline ProtoNodeBean& operator=(const ProtoNodeBean& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoNodeBean& default_instance();
  
  void Swap(ProtoNodeBean* other);
  
  // implements Message ----------------------------------------------
  
  ProtoNodeBean* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoNodeBean& from);
  void MergeFrom(const ProtoNodeBean& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bytes nodeId = 1;
  inline bool has_nodeid() const;
  inline void clear_nodeid();
  static const int kNodeIdFieldNumber = 1;
  inline const ::std::string& nodeid() const;
  inline void set_nodeid(const ::std::string& value);
  inline void set_nodeid(const char* value);
  inline void set_nodeid(const void* value, size_t size);
  inline ::std::string* mutable_nodeid();
  inline ::std::string* release_nodeid();
  
  // repeated string tcpAddress = 2;
  inline int tcpaddress_size() const;
  inline void clear_tcpaddress();
  static const int kTcpAddressFieldNumber = 2;
  inline const ::std::string& tcpaddress(int index) const;
  inline ::std::string* mutable_tcpaddress(int index);
  inline void set_tcpaddress(int index, const ::std::string& value);
  inline void set_tcpaddress(int index, const char* value);
  inline void set_tcpaddress(int index, const char* value, size_t size);
  inline ::std::string* add_tcpaddress();
  inline void add_tcpaddress(const ::std::string& value);
  inline void add_tcpaddress(const char* value);
  inline void add_tcpaddress(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& tcpaddress() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_tcpaddress();
  
  // repeated string jettyAddress = 3;
  inline int jettyaddress_size() const;
  inline void clear_jettyaddress();
  static const int kJettyAddressFieldNumber = 3;
  inline const ::std::string& jettyaddress(int index) const;
  inline ::std::string* mutable_jettyaddress(int index);
  inline void set_jettyaddress(int index, const ::std::string& value);
  inline void set_jettyaddress(int index, const char* value);
  inline void set_jettyaddress(int index, const char* value, size_t size);
  inline ::std::string* add_jettyaddress();
  inline void add_jettyaddress(const ::std::string& value);
  inline void add_jettyaddress(const char* value);
  inline void add_jettyaddress(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& jettyaddress() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_jettyaddress();
  
  // required int32 tcpPort = 4;
  inline bool has_tcpport() const;
  inline void clear_tcpport();
  static const int kTcpPortFieldNumber = 4;
  inline ::google::protobuf::int32 tcpport() const;
  inline void set_tcpport(::google::protobuf::int32 value);
  
  // required int32 jettyPort = 5;
  inline bool has_jettyport() const;
  inline void clear_jettyport();
  static const int kJettyPortFieldNumber = 5;
  inline ::google::protobuf::int32 jettyport() const;
  inline void set_jettyport(::google::protobuf::int32 value);
  
  // optional .org.gridgain.grid.kernal.processors.rest.client.message.ProtoNodeMetricsBean metrics = 6;
  inline bool has_metrics() const;
  inline void clear_metrics();
  static const int kMetricsFieldNumber = 6;
  inline const ::org::gridgain::grid::kernal::processors::rest::client::message::ProtoNodeMetricsBean& metrics() const;
  inline ::org::gridgain::grid::kernal::processors::rest::client::message::ProtoNodeMetricsBean* mutable_metrics();
  inline ::org::gridgain::grid::kernal::processors::rest::client::message::ProtoNodeMetricsBean* release_metrics();
  
  // optional .org.gridgain.grid.kernal.processors.rest.client.message.Map attributes = 7;
  inline bool has_attributes() const;
  inline void clear_attributes();
  static const int kAttributesFieldNumber = 7;
  inline const ::org::gridgain::grid::kernal::processors::rest::client::message::Map& attributes() const;
  inline ::org::gridgain::grid::kernal::processors::rest::client::message::Map* mutable_attributes();
  inline ::org::gridgain::grid::kernal::processors::rest::client::message::Map* release_attributes();
  
  // optional .org.gridgain.grid.kernal.processors.rest.client.message.Map caches = 9;
  inline bool has_caches() const;
  inline void clear_caches();
  static const int kCachesFieldNumber = 9;
  inline const ::org::gridgain::grid::kernal::processors::rest::client::message::Map& caches() const;
  inline ::org::gridgain::grid::kernal::processors::rest::client::message::Map* mutable_caches();
  inline ::org::gridgain::grid::kernal::processors::rest::client::message::Map* release_caches();
  
  // repeated string tcpHostName = 10;
  inline int tcphostname_size() const;
  inline void clear_tcphostname();
  static const int kTcpHostNameFieldNumber = 10;
  inline const ::std::string& tcphostname(int index) const;
  inline ::std::string* mutable_tcphostname(int index);
  inline void set_tcphostname(int index, const ::std::string& value);
  inline void set_tcphostname(int index, const char* value);
  inline void set_tcphostname(int index, const char* value, size_t size);
  inline ::std::string* add_tcphostname();
  inline void add_tcphostname(const ::std::string& value);
  inline void add_tcphostname(const char* value);
  inline void add_tcphostname(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& tcphostname() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_tcphostname();
  
  // repeated string jettyHostName = 11;
  inline int jettyhostname_size() const;
  inline void clear_jettyhostname();
  static const int kJettyHostNameFieldNumber = 11;
  inline const ::std::string& jettyhostname(int index) const;
  inline ::std::string* mutable_jettyhostname(int index);
  inline void set_jettyhostname(int index, const ::std::string& value);
  inline void set_jettyhostname(int index, const char* value);
  inline void set_jettyhostname(int index, const char* value, size_t size);
  inline ::std::string* add_jettyhostname();
  inline void add_jettyhostname(const ::std::string& value);
  inline void add_jettyhostname(const char* value);
  inline void add_jettyhostname(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& jettyhostname() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_jettyhostname();
  
  // required int32 replicaCount = 13;
  inline bool has_replicacount() const;
  inline void clear_replicacount();
  static const int kReplicaCountFieldNumber = 13;
  inline ::google::protobuf::int32 replicacount() const;
  inline void set_replicacount(::google::protobuf::int32 value);
  
  // required .org.gridgain.grid.kernal.processors.rest.client.message.ObjectWrapper consistentId = 14;
  inline bool has_consistentid() const;
  inline void clear_consistentid();
  static const int kConsistentIdFieldNumber = 14;
  inline const ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper& consistentid() const;
  inline ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* mutable_consistentid();
  inline ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* release_consistentid();
  
  // @@protoc_insertion_point(class_scope:org.gridgain.grid.kernal.processors.rest.client.message.ProtoNodeBean)
 private:
  inline void set_has_nodeid();
  inline void clear_has_nodeid();
  inline void set_has_tcpport();
  inline void clear_has_tcpport();
  inline void set_has_jettyport();
  inline void clear_has_jettyport();
  inline void set_has_metrics();
  inline void clear_has_metrics();
  inline void set_has_attributes();
  inline void clear_has_attributes();
  inline void set_has_caches();
  inline void clear_has_caches();
  inline void set_has_replicacount();
  inline void clear_has_replicacount();
  inline void set_has_consistentid();
  inline void clear_has_consistentid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* nodeid_;
  ::google::protobuf::RepeatedPtrField< ::std::string> tcpaddress_;
  ::google::protobuf::RepeatedPtrField< ::std::string> jettyaddress_;
  ::google::protobuf::int32 tcpport_;
  ::google::protobuf::int32 jettyport_;
  ::org::gridgain::grid::kernal::processors::rest::client::message::ProtoNodeMetricsBean* metrics_;
  ::org::gridgain::grid::kernal::processors::rest::client::message::Map* attributes_;
  ::org::gridgain::grid::kernal::processors::rest::client::message::Map* caches_;
  ::google::protobuf::RepeatedPtrField< ::std::string> tcphostname_;
  ::google::protobuf::RepeatedPtrField< ::std::string> jettyhostname_;
  ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* consistentid_;
  ::google::protobuf::int32 replicacount_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];
  
  friend void  protobuf_AddDesc_ClientMessages_2eproto();
  friend void protobuf_AssignDesc_ClientMessages_2eproto();
  friend void protobuf_ShutdownFile_ClientMessages_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoNodeBean* default_instance_;
};
// ===================================================================


// ===================================================================

// ObjectWrapper

// required .org.gridgain.grid.kernal.processors.rest.client.message.ObjectWrapperType type = 1;
inline bool ObjectWrapper::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ObjectWrapper::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ObjectWrapper::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ObjectWrapper::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapperType ObjectWrapper::type() const {
  return static_cast< org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapperType >(type_);
}
inline void ObjectWrapper::set_type(org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapperType value) {
  GOOGLE_DCHECK(org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapperType_IsValid(value));
  set_has_type();
  type_ = value;
}

// required bytes binary = 2;
inline bool ObjectWrapper::has_binary() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ObjectWrapper::set_has_binary() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ObjectWrapper::clear_has_binary() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ObjectWrapper::clear_binary() {
  if (binary_ != &::google::protobuf::internal::kEmptyString) {
    binary_->clear();
  }
  clear_has_binary();
}
inline const ::std::string& ObjectWrapper::binary() const {
  return *binary_;
}
inline void ObjectWrapper::set_binary(const ::std::string& value) {
  set_has_binary();
  if (binary_ == &::google::protobuf::internal::kEmptyString) {
    binary_ = new ::std::string;
  }
  binary_->assign(value);
}
inline void ObjectWrapper::set_binary(const char* value) {
  set_has_binary();
  if (binary_ == &::google::protobuf::internal::kEmptyString) {
    binary_ = new ::std::string;
  }
  binary_->assign(value);
}
inline void ObjectWrapper::set_binary(const void* value, size_t size) {
  set_has_binary();
  if (binary_ == &::google::protobuf::internal::kEmptyString) {
    binary_ = new ::std::string;
  }
  binary_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ObjectWrapper::mutable_binary() {
  set_has_binary();
  if (binary_ == &::google::protobuf::internal::kEmptyString) {
    binary_ = new ::std::string;
  }
  return binary_;
}
inline ::std::string* ObjectWrapper::release_binary() {
  clear_has_binary();
  if (binary_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = binary_;
    binary_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// Collection

// repeated .org.gridgain.grid.kernal.processors.rest.client.message.ObjectWrapper item = 1;
inline int Collection::item_size() const {
  return item_.size();
}
inline void Collection::clear_item() {
  item_.Clear();
}
inline const ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper& Collection::item(int index) const {
  return item_.Get(index);
}
inline ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* Collection::mutable_item(int index) {
  return item_.Mutable(index);
}
inline ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* Collection::add_item() {
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper >&
Collection::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper >*
Collection::mutable_item() {
  return &item_;
}

// -------------------------------------------------------------------

// KeyValue

// required .org.gridgain.grid.kernal.processors.rest.client.message.ObjectWrapper key = 1;
inline bool KeyValue::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KeyValue::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KeyValue::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KeyValue::clear_key() {
  if (key_ != NULL) key_->::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper::Clear();
  clear_has_key();
}
inline const ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper& KeyValue::key() const {
  return key_ != NULL ? *key_ : *default_instance_->key_;
}
inline ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* KeyValue::mutable_key() {
  set_has_key();
  if (key_ == NULL) key_ = new ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper;
  return key_;
}
inline ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* KeyValue::release_key() {
  clear_has_key();
  ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* temp = key_;
  key_ = NULL;
  return temp;
}

// required .org.gridgain.grid.kernal.processors.rest.client.message.ObjectWrapper value = 2;
inline bool KeyValue::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KeyValue::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KeyValue::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KeyValue::clear_value() {
  if (value_ != NULL) value_->::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper::Clear();
  clear_has_value();
}
inline const ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper& KeyValue::value() const {
  return value_ != NULL ? *value_ : *default_instance_->value_;
}
inline ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* KeyValue::mutable_value() {
  set_has_value();
  if (value_ == NULL) value_ = new ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper;
  return value_;
}
inline ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* KeyValue::release_value() {
  clear_has_value();
  ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* temp = value_;
  value_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// Map

// repeated .org.gridgain.grid.kernal.processors.rest.client.message.KeyValue entry = 1;
inline int Map::entry_size() const {
  return entry_.size();
}
inline void Map::clear_entry() {
  entry_.Clear();
}
inline const ::org::gridgain::grid::kernal::processors::rest::client::message::KeyValue& Map::entry(int index) const {
  return entry_.Get(index);
}
inline ::org::gridgain::grid::kernal::processors::rest::client::message::KeyValue* Map::mutable_entry(int index) {
  return entry_.Mutable(index);
}
inline ::org::gridgain::grid::kernal::processors::rest::client::message::KeyValue* Map::add_entry() {
  return entry_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::org::gridgain::grid::kernal::processors::rest::client::message::KeyValue >&
Map::entry() const {
  return entry_;
}
inline ::google::protobuf::RepeatedPtrField< ::org::gridgain::grid::kernal::processors::rest::client::message::KeyValue >*
Map::mutable_entry() {
  return &entry_;
}

// -------------------------------------------------------------------

// ProtoRequest

// required bytes body = 1;
inline bool ProtoRequest::has_body() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoRequest::set_has_body() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoRequest::clear_has_body() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoRequest::clear_body() {
  if (body_ != &::google::protobuf::internal::kEmptyString) {
    body_->clear();
  }
  clear_has_body();
}
inline const ::std::string& ProtoRequest::body() const {
  return *body_;
}
inline void ProtoRequest::set_body(const ::std::string& value) {
  set_has_body();
  if (body_ == &::google::protobuf::internal::kEmptyString) {
    body_ = new ::std::string;
  }
  body_->assign(value);
}
inline void ProtoRequest::set_body(const char* value) {
  set_has_body();
  if (body_ == &::google::protobuf::internal::kEmptyString) {
    body_ = new ::std::string;
  }
  body_->assign(value);
}
inline void ProtoRequest::set_body(const void* value, size_t size) {
  set_has_body();
  if (body_ == &::google::protobuf::internal::kEmptyString) {
    body_ = new ::std::string;
  }
  body_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtoRequest::mutable_body() {
  set_has_body();
  if (body_ == &::google::protobuf::internal::kEmptyString) {
    body_ = new ::std::string;
  }
  return body_;
}
inline ::std::string* ProtoRequest::release_body() {
  clear_has_body();
  if (body_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = body_;
    body_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional bytes sessionToken = 2;
inline bool ProtoRequest::has_sessiontoken() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoRequest::set_has_sessiontoken() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoRequest::clear_has_sessiontoken() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoRequest::clear_sessiontoken() {
  if (sessiontoken_ != &::google::protobuf::internal::kEmptyString) {
    sessiontoken_->clear();
  }
  clear_has_sessiontoken();
}
inline const ::std::string& ProtoRequest::sessiontoken() const {
  return *sessiontoken_;
}
inline void ProtoRequest::set_sessiontoken(const ::std::string& value) {
  set_has_sessiontoken();
  if (sessiontoken_ == &::google::protobuf::internal::kEmptyString) {
    sessiontoken_ = new ::std::string;
  }
  sessiontoken_->assign(value);
}
inline void ProtoRequest::set_sessiontoken(const char* value) {
  set_has_sessiontoken();
  if (sessiontoken_ == &::google::protobuf::internal::kEmptyString) {
    sessiontoken_ = new ::std::string;
  }
  sessiontoken_->assign(value);
}
inline void ProtoRequest::set_sessiontoken(const void* value, size_t size) {
  set_has_sessiontoken();
  if (sessiontoken_ == &::google::protobuf::internal::kEmptyString) {
    sessiontoken_ = new ::std::string;
  }
  sessiontoken_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtoRequest::mutable_sessiontoken() {
  set_has_sessiontoken();
  if (sessiontoken_ == &::google::protobuf::internal::kEmptyString) {
    sessiontoken_ = new ::std::string;
  }
  return sessiontoken_;
}
inline ::std::string* ProtoRequest::release_sessiontoken() {
  clear_has_sessiontoken();
  if (sessiontoken_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sessiontoken_;
    sessiontoken_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// ProtoAuthenticationRequest

// required .org.gridgain.grid.kernal.processors.rest.client.message.ObjectWrapper credentials = 1;
inline bool ProtoAuthenticationRequest::has_credentials() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoAuthenticationRequest::set_has_credentials() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoAuthenticationRequest::clear_has_credentials() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoAuthenticationRequest::clear_credentials() {
  if (credentials_ != NULL) credentials_->::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper::Clear();
  clear_has_credentials();
}
inline const ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper& ProtoAuthenticationRequest::credentials() const {
  return credentials_ != NULL ? *credentials_ : *default_instance_->credentials_;
}
inline ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* ProtoAuthenticationRequest::mutable_credentials() {
  set_has_credentials();
  if (credentials_ == NULL) credentials_ = new ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper;
  return credentials_;
}
inline ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* ProtoAuthenticationRequest::release_credentials() {
  clear_has_credentials();
  ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* temp = credentials_;
  credentials_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ProtoCacheRequest

// required .org.gridgain.grid.kernal.processors.rest.client.message.ProtoCacheRequest.GridCacheOperation operation = 3;
inline bool ProtoCacheRequest::has_operation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoCacheRequest::set_has_operation() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoCacheRequest::clear_has_operation() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoCacheRequest::clear_operation() {
  operation_ = 1;
  clear_has_operation();
}
inline ::org::gridgain::grid::kernal::processors::rest::client::message::ProtoCacheRequest_GridCacheOperation ProtoCacheRequest::operation() const {
  return static_cast< ::org::gridgain::grid::kernal::processors::rest::client::message::ProtoCacheRequest_GridCacheOperation >(operation_);
}
inline void ProtoCacheRequest::set_operation(::org::gridgain::grid::kernal::processors::rest::client::message::ProtoCacheRequest_GridCacheOperation value) {
  GOOGLE_DCHECK(::org::gridgain::grid::kernal::processors::rest::client::message::ProtoCacheRequest_GridCacheOperation_IsValid(value));
  set_has_operation();
  operation_ = value;
}

// optional string cacheName = 4;
inline bool ProtoCacheRequest::has_cachename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoCacheRequest::set_has_cachename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoCacheRequest::clear_has_cachename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoCacheRequest::clear_cachename() {
  if (cachename_ != &::google::protobuf::internal::kEmptyString) {
    cachename_->clear();
  }
  clear_has_cachename();
}
inline const ::std::string& ProtoCacheRequest::cachename() const {
  return *cachename_;
}
inline void ProtoCacheRequest::set_cachename(const ::std::string& value) {
  set_has_cachename();
  if (cachename_ == &::google::protobuf::internal::kEmptyString) {
    cachename_ = new ::std::string;
  }
  cachename_->assign(value);
}
inline void ProtoCacheRequest::set_cachename(const char* value) {
  set_has_cachename();
  if (cachename_ == &::google::protobuf::internal::kEmptyString) {
    cachename_ = new ::std::string;
  }
  cachename_->assign(value);
}
inline void ProtoCacheRequest::set_cachename(const char* value, size_t size) {
  set_has_cachename();
  if (cachename_ == &::google::protobuf::internal::kEmptyString) {
    cachename_ = new ::std::string;
  }
  cachename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtoCacheRequest::mutable_cachename() {
  set_has_cachename();
  if (cachename_ == &::google::protobuf::internal::kEmptyString) {
    cachename_ = new ::std::string;
  }
  return cachename_;
}
inline ::std::string* ProtoCacheRequest::release_cachename() {
  clear_has_cachename();
  if (cachename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = cachename_;
    cachename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional .org.gridgain.grid.kernal.processors.rest.client.message.ObjectWrapper key = 5;
inline bool ProtoCacheRequest::has_key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoCacheRequest::set_has_key() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoCacheRequest::clear_has_key() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoCacheRequest::clear_key() {
  if (key_ != NULL) key_->::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper::Clear();
  clear_has_key();
}
inline const ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper& ProtoCacheRequest::key() const {
  return key_ != NULL ? *key_ : *default_instance_->key_;
}
inline ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* ProtoCacheRequest::mutable_key() {
  set_has_key();
  if (key_ == NULL) key_ = new ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper;
  return key_;
}
inline ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* ProtoCacheRequest::release_key() {
  clear_has_key();
  ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* temp = key_;
  key_ = NULL;
  return temp;
}

// optional .org.gridgain.grid.kernal.processors.rest.client.message.ObjectWrapper value = 6;
inline bool ProtoCacheRequest::has_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoCacheRequest::set_has_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoCacheRequest::clear_has_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoCacheRequest::clear_value() {
  if (value_ != NULL) value_->::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper::Clear();
  clear_has_value();
}
inline const ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper& ProtoCacheRequest::value() const {
  return value_ != NULL ? *value_ : *default_instance_->value_;
}
inline ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* ProtoCacheRequest::mutable_value() {
  set_has_value();
  if (value_ == NULL) value_ = new ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper;
  return value_;
}
inline ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* ProtoCacheRequest::release_value() {
  clear_has_value();
  ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* temp = value_;
  value_ = NULL;
  return temp;
}

// optional .org.gridgain.grid.kernal.processors.rest.client.message.ObjectWrapper value2 = 7;
inline bool ProtoCacheRequest::has_value2() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProtoCacheRequest::set_has_value2() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProtoCacheRequest::clear_has_value2() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProtoCacheRequest::clear_value2() {
  if (value2_ != NULL) value2_->::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper::Clear();
  clear_has_value2();
}
inline const ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper& ProtoCacheRequest::value2() const {
  return value2_ != NULL ? *value2_ : *default_instance_->value2_;
}
inline ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* ProtoCacheRequest::mutable_value2() {
  set_has_value2();
  if (value2_ == NULL) value2_ = new ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper;
  return value2_;
}
inline ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* ProtoCacheRequest::release_value2() {
  clear_has_value2();
  ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* temp = value2_;
  value2_ = NULL;
  return temp;
}

// optional .org.gridgain.grid.kernal.processors.rest.client.message.Map values = 8;
inline bool ProtoCacheRequest::has_values() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProtoCacheRequest::set_has_values() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProtoCacheRequest::clear_has_values() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProtoCacheRequest::clear_values() {
  if (values_ != NULL) values_->::org::gridgain::grid::kernal::processors::rest::client::message::Map::Clear();
  clear_has_values();
}
inline const ::org::gridgain::grid::kernal::processors::rest::client::message::Map& ProtoCacheRequest::values() const {
  return values_ != NULL ? *values_ : *default_instance_->values_;
}
inline ::org::gridgain::grid::kernal::processors::rest::client::message::Map* ProtoCacheRequest::mutable_values() {
  set_has_values();
  if (values_ == NULL) values_ = new ::org::gridgain::grid::kernal::processors::rest::client::message::Map;
  return values_;
}
inline ::org::gridgain::grid::kernal::processors::rest::client::message::Map* ProtoCacheRequest::release_values() {
  clear_has_values();
  ::org::gridgain::grid::kernal::processors::rest::client::message::Map* temp = values_;
  values_ = NULL;
  return temp;
}

// optional int32 cacheFlagsOn = 9;
inline bool ProtoCacheRequest::has_cacheflagson() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ProtoCacheRequest::set_has_cacheflagson() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ProtoCacheRequest::clear_has_cacheflagson() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ProtoCacheRequest::clear_cacheflagson() {
  cacheflagson_ = 0;
  clear_has_cacheflagson();
}
inline ::google::protobuf::int32 ProtoCacheRequest::cacheflagson() const {
  return cacheflagson_;
}
inline void ProtoCacheRequest::set_cacheflagson(::google::protobuf::int32 value) {
  set_has_cacheflagson();
  cacheflagson_ = value;
}

// -------------------------------------------------------------------

// ProtoLogRequest

// optional string path = 3;
inline bool ProtoLogRequest::has_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoLogRequest::set_has_path() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoLogRequest::clear_has_path() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoLogRequest::clear_path() {
  if (path_ != &::google::protobuf::internal::kEmptyString) {
    path_->clear();
  }
  clear_has_path();
}
inline const ::std::string& ProtoLogRequest::path() const {
  return *path_;
}
inline void ProtoLogRequest::set_path(const ::std::string& value) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  path_->assign(value);
}
inline void ProtoLogRequest::set_path(const char* value) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  path_->assign(value);
}
inline void ProtoLogRequest::set_path(const char* value, size_t size) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  path_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtoLogRequest::mutable_path() {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  return path_;
}
inline ::std::string* ProtoLogRequest::release_path() {
  clear_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = path_;
    path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 from = 4;
inline bool ProtoLogRequest::has_from() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoLogRequest::set_has_from() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoLogRequest::clear_has_from() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoLogRequest::clear_from() {
  from_ = 0;
  clear_has_from();
}
inline ::google::protobuf::int32 ProtoLogRequest::from() const {
  return from_;
}
inline void ProtoLogRequest::set_from(::google::protobuf::int32 value) {
  set_has_from();
  from_ = value;
}

// optional int32 to = 5;
inline bool ProtoLogRequest::has_to() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoLogRequest::set_has_to() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoLogRequest::clear_has_to() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoLogRequest::clear_to() {
  to_ = 0;
  clear_has_to();
}
inline ::google::protobuf::int32 ProtoLogRequest::to() const {
  return to_;
}
inline void ProtoLogRequest::set_to(::google::protobuf::int32 value) {
  set_has_to();
  to_ = value;
}

// -------------------------------------------------------------------

// ProtoTaskRequest

// required string taskName = 3;
inline bool ProtoTaskRequest::has_taskname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoTaskRequest::set_has_taskname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoTaskRequest::clear_has_taskname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoTaskRequest::clear_taskname() {
  if (taskname_ != &::google::protobuf::internal::kEmptyString) {
    taskname_->clear();
  }
  clear_has_taskname();
}
inline const ::std::string& ProtoTaskRequest::taskname() const {
  return *taskname_;
}
inline void ProtoTaskRequest::set_taskname(const ::std::string& value) {
  set_has_taskname();
  if (taskname_ == &::google::protobuf::internal::kEmptyString) {
    taskname_ = new ::std::string;
  }
  taskname_->assign(value);
}
inline void ProtoTaskRequest::set_taskname(const char* value) {
  set_has_taskname();
  if (taskname_ == &::google::protobuf::internal::kEmptyString) {
    taskname_ = new ::std::string;
  }
  taskname_->assign(value);
}
inline void ProtoTaskRequest::set_taskname(const char* value, size_t size) {
  set_has_taskname();
  if (taskname_ == &::google::protobuf::internal::kEmptyString) {
    taskname_ = new ::std::string;
  }
  taskname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtoTaskRequest::mutable_taskname() {
  set_has_taskname();
  if (taskname_ == &::google::protobuf::internal::kEmptyString) {
    taskname_ = new ::std::string;
  }
  return taskname_;
}
inline ::std::string* ProtoTaskRequest::release_taskname() {
  clear_has_taskname();
  if (taskname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = taskname_;
    taskname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required .org.gridgain.grid.kernal.processors.rest.client.message.ObjectWrapper argument = 4;
inline bool ProtoTaskRequest::has_argument() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoTaskRequest::set_has_argument() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoTaskRequest::clear_has_argument() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoTaskRequest::clear_argument() {
  if (argument_ != NULL) argument_->::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper::Clear();
  clear_has_argument();
}
inline const ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper& ProtoTaskRequest::argument() const {
  return argument_ != NULL ? *argument_ : *default_instance_->argument_;
}
inline ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* ProtoTaskRequest::mutable_argument() {
  set_has_argument();
  if (argument_ == NULL) argument_ = new ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper;
  return argument_;
}
inline ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* ProtoTaskRequest::release_argument() {
  clear_has_argument();
  ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* temp = argument_;
  argument_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ProtoTopologyRequest

// required bool includeAttributes = 3;
inline bool ProtoTopologyRequest::has_includeattributes() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoTopologyRequest::set_has_includeattributes() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoTopologyRequest::clear_has_includeattributes() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoTopologyRequest::clear_includeattributes() {
  includeattributes_ = false;
  clear_has_includeattributes();
}
inline bool ProtoTopologyRequest::includeattributes() const {
  return includeattributes_;
}
inline void ProtoTopologyRequest::set_includeattributes(bool value) {
  set_has_includeattributes();
  includeattributes_ = value;
}

// required bool includeMetrics = 4;
inline bool ProtoTopologyRequest::has_includemetrics() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoTopologyRequest::set_has_includemetrics() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoTopologyRequest::clear_has_includemetrics() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoTopologyRequest::clear_includemetrics() {
  includemetrics_ = false;
  clear_has_includemetrics();
}
inline bool ProtoTopologyRequest::includemetrics() const {
  return includemetrics_;
}
inline void ProtoTopologyRequest::set_includemetrics(bool value) {
  set_has_includemetrics();
  includemetrics_ = value;
}

// optional string nodeId = 5;
inline bool ProtoTopologyRequest::has_nodeid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoTopologyRequest::set_has_nodeid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoTopologyRequest::clear_has_nodeid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoTopologyRequest::clear_nodeid() {
  if (nodeid_ != &::google::protobuf::internal::kEmptyString) {
    nodeid_->clear();
  }
  clear_has_nodeid();
}
inline const ::std::string& ProtoTopologyRequest::nodeid() const {
  return *nodeid_;
}
inline void ProtoTopologyRequest::set_nodeid(const ::std::string& value) {
  set_has_nodeid();
  if (nodeid_ == &::google::protobuf::internal::kEmptyString) {
    nodeid_ = new ::std::string;
  }
  nodeid_->assign(value);
}
inline void ProtoTopologyRequest::set_nodeid(const char* value) {
  set_has_nodeid();
  if (nodeid_ == &::google::protobuf::internal::kEmptyString) {
    nodeid_ = new ::std::string;
  }
  nodeid_->assign(value);
}
inline void ProtoTopologyRequest::set_nodeid(const char* value, size_t size) {
  set_has_nodeid();
  if (nodeid_ == &::google::protobuf::internal::kEmptyString) {
    nodeid_ = new ::std::string;
  }
  nodeid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtoTopologyRequest::mutable_nodeid() {
  set_has_nodeid();
  if (nodeid_ == &::google::protobuf::internal::kEmptyString) {
    nodeid_ = new ::std::string;
  }
  return nodeid_;
}
inline ::std::string* ProtoTopologyRequest::release_nodeid() {
  clear_has_nodeid();
  if (nodeid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = nodeid_;
    nodeid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string nodeIp = 6;
inline bool ProtoTopologyRequest::has_nodeip() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoTopologyRequest::set_has_nodeip() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoTopologyRequest::clear_has_nodeip() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoTopologyRequest::clear_nodeip() {
  if (nodeip_ != &::google::protobuf::internal::kEmptyString) {
    nodeip_->clear();
  }
  clear_has_nodeip();
}
inline const ::std::string& ProtoTopologyRequest::nodeip() const {
  return *nodeip_;
}
inline void ProtoTopologyRequest::set_nodeip(const ::std::string& value) {
  set_has_nodeip();
  if (nodeip_ == &::google::protobuf::internal::kEmptyString) {
    nodeip_ = new ::std::string;
  }
  nodeip_->assign(value);
}
inline void ProtoTopologyRequest::set_nodeip(const char* value) {
  set_has_nodeip();
  if (nodeip_ == &::google::protobuf::internal::kEmptyString) {
    nodeip_ = new ::std::string;
  }
  nodeip_->assign(value);
}
inline void ProtoTopologyRequest::set_nodeip(const char* value, size_t size) {
  set_has_nodeip();
  if (nodeip_ == &::google::protobuf::internal::kEmptyString) {
    nodeip_ = new ::std::string;
  }
  nodeip_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtoTopologyRequest::mutable_nodeip() {
  set_has_nodeip();
  if (nodeip_ == &::google::protobuf::internal::kEmptyString) {
    nodeip_ = new ::std::string;
  }
  return nodeip_;
}
inline ::std::string* ProtoTopologyRequest::release_nodeip() {
  clear_has_nodeip();
  if (nodeip_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = nodeip_;
    nodeip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// ProtoResponse

// required int32 status = 1;
inline bool ProtoResponse::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoResponse::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 ProtoResponse::status() const {
  return status_;
}
inline void ProtoResponse::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// optional string errorMessage = 2;
inline bool ProtoResponse::has_errormessage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoResponse::set_has_errormessage() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoResponse::clear_has_errormessage() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoResponse::clear_errormessage() {
  if (errormessage_ != &::google::protobuf::internal::kEmptyString) {
    errormessage_->clear();
  }
  clear_has_errormessage();
}
inline const ::std::string& ProtoResponse::errormessage() const {
  return *errormessage_;
}
inline void ProtoResponse::set_errormessage(const ::std::string& value) {
  set_has_errormessage();
  if (errormessage_ == &::google::protobuf::internal::kEmptyString) {
    errormessage_ = new ::std::string;
  }
  errormessage_->assign(value);
}
inline void ProtoResponse::set_errormessage(const char* value) {
  set_has_errormessage();
  if (errormessage_ == &::google::protobuf::internal::kEmptyString) {
    errormessage_ = new ::std::string;
  }
  errormessage_->assign(value);
}
inline void ProtoResponse::set_errormessage(const char* value, size_t size) {
  set_has_errormessage();
  if (errormessage_ == &::google::protobuf::internal::kEmptyString) {
    errormessage_ = new ::std::string;
  }
  errormessage_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtoResponse::mutable_errormessage() {
  set_has_errormessage();
  if (errormessage_ == &::google::protobuf::internal::kEmptyString) {
    errormessage_ = new ::std::string;
  }
  return errormessage_;
}
inline ::std::string* ProtoResponse::release_errormessage() {
  clear_has_errormessage();
  if (errormessage_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = errormessage_;
    errormessage_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional .org.gridgain.grid.kernal.processors.rest.client.message.ObjectWrapper resultBean = 3;
inline bool ProtoResponse::has_resultbean() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoResponse::set_has_resultbean() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoResponse::clear_has_resultbean() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoResponse::clear_resultbean() {
  if (resultbean_ != NULL) resultbean_->::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper::Clear();
  clear_has_resultbean();
}
inline const ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper& ProtoResponse::resultbean() const {
  return resultbean_ != NULL ? *resultbean_ : *default_instance_->resultbean_;
}
inline ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* ProtoResponse::mutable_resultbean() {
  set_has_resultbean();
  if (resultbean_ == NULL) resultbean_ = new ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper;
  return resultbean_;
}
inline ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* ProtoResponse::release_resultbean() {
  clear_has_resultbean();
  ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* temp = resultbean_;
  resultbean_ = NULL;
  return temp;
}

// optional bytes sessionToken = 4;
inline bool ProtoResponse::has_sessiontoken() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoResponse::set_has_sessiontoken() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoResponse::clear_has_sessiontoken() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoResponse::clear_sessiontoken() {
  if (sessiontoken_ != &::google::protobuf::internal::kEmptyString) {
    sessiontoken_->clear();
  }
  clear_has_sessiontoken();
}
inline const ::std::string& ProtoResponse::sessiontoken() const {
  return *sessiontoken_;
}
inline void ProtoResponse::set_sessiontoken(const ::std::string& value) {
  set_has_sessiontoken();
  if (sessiontoken_ == &::google::protobuf::internal::kEmptyString) {
    sessiontoken_ = new ::std::string;
  }
  sessiontoken_->assign(value);
}
inline void ProtoResponse::set_sessiontoken(const char* value) {
  set_has_sessiontoken();
  if (sessiontoken_ == &::google::protobuf::internal::kEmptyString) {
    sessiontoken_ = new ::std::string;
  }
  sessiontoken_->assign(value);
}
inline void ProtoResponse::set_sessiontoken(const void* value, size_t size) {
  set_has_sessiontoken();
  if (sessiontoken_ == &::google::protobuf::internal::kEmptyString) {
    sessiontoken_ = new ::std::string;
  }
  sessiontoken_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtoResponse::mutable_sessiontoken() {
  set_has_sessiontoken();
  if (sessiontoken_ == &::google::protobuf::internal::kEmptyString) {
    sessiontoken_ = new ::std::string;
  }
  return sessiontoken_;
}
inline ::std::string* ProtoResponse::release_sessiontoken() {
  clear_has_sessiontoken();
  if (sessiontoken_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sessiontoken_;
    sessiontoken_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// ProtoTaskBean

// required string taskId = 2;
inline bool ProtoTaskBean::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoTaskBean::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoTaskBean::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoTaskBean::clear_taskid() {
  if (taskid_ != &::google::protobuf::internal::kEmptyString) {
    taskid_->clear();
  }
  clear_has_taskid();
}
inline const ::std::string& ProtoTaskBean::taskid() const {
  return *taskid_;
}
inline void ProtoTaskBean::set_taskid(const ::std::string& value) {
  set_has_taskid();
  if (taskid_ == &::google::protobuf::internal::kEmptyString) {
    taskid_ = new ::std::string;
  }
  taskid_->assign(value);
}
inline void ProtoTaskBean::set_taskid(const char* value) {
  set_has_taskid();
  if (taskid_ == &::google::protobuf::internal::kEmptyString) {
    taskid_ = new ::std::string;
  }
  taskid_->assign(value);
}
inline void ProtoTaskBean::set_taskid(const char* value, size_t size) {
  set_has_taskid();
  if (taskid_ == &::google::protobuf::internal::kEmptyString) {
    taskid_ = new ::std::string;
  }
  taskid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtoTaskBean::mutable_taskid() {
  set_has_taskid();
  if (taskid_ == &::google::protobuf::internal::kEmptyString) {
    taskid_ = new ::std::string;
  }
  return taskid_;
}
inline ::std::string* ProtoTaskBean::release_taskid() {
  clear_has_taskid();
  if (taskid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = taskid_;
    taskid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required bool finished = 3;
inline bool ProtoTaskBean::has_finished() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoTaskBean::set_has_finished() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoTaskBean::clear_has_finished() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoTaskBean::clear_finished() {
  finished_ = false;
  clear_has_finished();
}
inline bool ProtoTaskBean::finished() const {
  return finished_;
}
inline void ProtoTaskBean::set_finished(bool value) {
  set_has_finished();
  finished_ = value;
}

// optional .org.gridgain.grid.kernal.processors.rest.client.message.ObjectWrapper resultBean = 4;
inline bool ProtoTaskBean::has_resultbean() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoTaskBean::set_has_resultbean() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoTaskBean::clear_has_resultbean() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoTaskBean::clear_resultbean() {
  if (resultbean_ != NULL) resultbean_->::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper::Clear();
  clear_has_resultbean();
}
inline const ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper& ProtoTaskBean::resultbean() const {
  return resultbean_ != NULL ? *resultbean_ : *default_instance_->resultbean_;
}
inline ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* ProtoTaskBean::mutable_resultbean() {
  set_has_resultbean();
  if (resultbean_ == NULL) resultbean_ = new ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper;
  return resultbean_;
}
inline ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* ProtoTaskBean::release_resultbean() {
  clear_has_resultbean();
  ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* temp = resultbean_;
  resultbean_ = NULL;
  return temp;
}

// optional string error = 5;
inline bool ProtoTaskBean::has_error() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoTaskBean::set_has_error() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoTaskBean::clear_has_error() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoTaskBean::clear_error() {
  if (error_ != &::google::protobuf::internal::kEmptyString) {
    error_->clear();
  }
  clear_has_error();
}
inline const ::std::string& ProtoTaskBean::error() const {
  return *error_;
}
inline void ProtoTaskBean::set_error(const ::std::string& value) {
  set_has_error();
  if (error_ == &::google::protobuf::internal::kEmptyString) {
    error_ = new ::std::string;
  }
  error_->assign(value);
}
inline void ProtoTaskBean::set_error(const char* value) {
  set_has_error();
  if (error_ == &::google::protobuf::internal::kEmptyString) {
    error_ = new ::std::string;
  }
  error_->assign(value);
}
inline void ProtoTaskBean::set_error(const char* value, size_t size) {
  set_has_error();
  if (error_ == &::google::protobuf::internal::kEmptyString) {
    error_ = new ::std::string;
  }
  error_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtoTaskBean::mutable_error() {
  set_has_error();
  if (error_ == &::google::protobuf::internal::kEmptyString) {
    error_ = new ::std::string;
  }
  return error_;
}
inline ::std::string* ProtoTaskBean::release_error() {
  clear_has_error();
  if (error_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = error_;
    error_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// ProtoNodeMetricsBean

// required int64 lastUpdateTime = 1 [default = -1];
inline bool ProtoNodeMetricsBean::has_lastupdatetime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_lastupdatetime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoNodeMetricsBean::clear_has_lastupdatetime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoNodeMetricsBean::clear_lastupdatetime() {
  lastupdatetime_ = GOOGLE_LONGLONG(-1);
  clear_has_lastupdatetime();
}
inline ::google::protobuf::int64 ProtoNodeMetricsBean::lastupdatetime() const {
  return lastupdatetime_;
}
inline void ProtoNodeMetricsBean::set_lastupdatetime(::google::protobuf::int64 value) {
  set_has_lastupdatetime();
  lastupdatetime_ = value;
}

// required int32 maximumActiveJobs = 2 [default = -1];
inline bool ProtoNodeMetricsBean::has_maximumactivejobs() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_maximumactivejobs() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoNodeMetricsBean::clear_has_maximumactivejobs() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoNodeMetricsBean::clear_maximumactivejobs() {
  maximumactivejobs_ = -1;
  clear_has_maximumactivejobs();
}
inline ::google::protobuf::int32 ProtoNodeMetricsBean::maximumactivejobs() const {
  return maximumactivejobs_;
}
inline void ProtoNodeMetricsBean::set_maximumactivejobs(::google::protobuf::int32 value) {
  set_has_maximumactivejobs();
  maximumactivejobs_ = value;
}

// required int32 currentActiveJobs = 3 [default = -1];
inline bool ProtoNodeMetricsBean::has_currentactivejobs() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_currentactivejobs() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoNodeMetricsBean::clear_has_currentactivejobs() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoNodeMetricsBean::clear_currentactivejobs() {
  currentactivejobs_ = -1;
  clear_has_currentactivejobs();
}
inline ::google::protobuf::int32 ProtoNodeMetricsBean::currentactivejobs() const {
  return currentactivejobs_;
}
inline void ProtoNodeMetricsBean::set_currentactivejobs(::google::protobuf::int32 value) {
  set_has_currentactivejobs();
  currentactivejobs_ = value;
}

// required float averageActiveJobs = 4 [default = -1];
inline bool ProtoNodeMetricsBean::has_averageactivejobs() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_averageactivejobs() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoNodeMetricsBean::clear_has_averageactivejobs() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoNodeMetricsBean::clear_averageactivejobs() {
  averageactivejobs_ = -1;
  clear_has_averageactivejobs();
}
inline float ProtoNodeMetricsBean::averageactivejobs() const {
  return averageactivejobs_;
}
inline void ProtoNodeMetricsBean::set_averageactivejobs(float value) {
  set_has_averageactivejobs();
  averageactivejobs_ = value;
}

// required int32 maximumWaitingJobs = 5 [default = -1];
inline bool ProtoNodeMetricsBean::has_maximumwaitingjobs() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_maximumwaitingjobs() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProtoNodeMetricsBean::clear_has_maximumwaitingjobs() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProtoNodeMetricsBean::clear_maximumwaitingjobs() {
  maximumwaitingjobs_ = -1;
  clear_has_maximumwaitingjobs();
}
inline ::google::protobuf::int32 ProtoNodeMetricsBean::maximumwaitingjobs() const {
  return maximumwaitingjobs_;
}
inline void ProtoNodeMetricsBean::set_maximumwaitingjobs(::google::protobuf::int32 value) {
  set_has_maximumwaitingjobs();
  maximumwaitingjobs_ = value;
}

// required int32 currentWaitingJobs = 6 [default = -1];
inline bool ProtoNodeMetricsBean::has_currentwaitingjobs() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_currentwaitingjobs() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProtoNodeMetricsBean::clear_has_currentwaitingjobs() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProtoNodeMetricsBean::clear_currentwaitingjobs() {
  currentwaitingjobs_ = -1;
  clear_has_currentwaitingjobs();
}
inline ::google::protobuf::int32 ProtoNodeMetricsBean::currentwaitingjobs() const {
  return currentwaitingjobs_;
}
inline void ProtoNodeMetricsBean::set_currentwaitingjobs(::google::protobuf::int32 value) {
  set_has_currentwaitingjobs();
  currentwaitingjobs_ = value;
}

// required float averageWaitingJobs = 7 [default = -1];
inline bool ProtoNodeMetricsBean::has_averagewaitingjobs() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_averagewaitingjobs() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ProtoNodeMetricsBean::clear_has_averagewaitingjobs() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ProtoNodeMetricsBean::clear_averagewaitingjobs() {
  averagewaitingjobs_ = -1;
  clear_has_averagewaitingjobs();
}
inline float ProtoNodeMetricsBean::averagewaitingjobs() const {
  return averagewaitingjobs_;
}
inline void ProtoNodeMetricsBean::set_averagewaitingjobs(float value) {
  set_has_averagewaitingjobs();
  averagewaitingjobs_ = value;
}

// required int32 maximumRejectedJobs = 8 [default = -1];
inline bool ProtoNodeMetricsBean::has_maximumrejectedjobs() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_maximumrejectedjobs() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ProtoNodeMetricsBean::clear_has_maximumrejectedjobs() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ProtoNodeMetricsBean::clear_maximumrejectedjobs() {
  maximumrejectedjobs_ = -1;
  clear_has_maximumrejectedjobs();
}
inline ::google::protobuf::int32 ProtoNodeMetricsBean::maximumrejectedjobs() const {
  return maximumrejectedjobs_;
}
inline void ProtoNodeMetricsBean::set_maximumrejectedjobs(::google::protobuf::int32 value) {
  set_has_maximumrejectedjobs();
  maximumrejectedjobs_ = value;
}

// required int32 currentRejectedJobs = 9 [default = -1];
inline bool ProtoNodeMetricsBean::has_currentrejectedjobs() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_currentrejectedjobs() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ProtoNodeMetricsBean::clear_has_currentrejectedjobs() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ProtoNodeMetricsBean::clear_currentrejectedjobs() {
  currentrejectedjobs_ = -1;
  clear_has_currentrejectedjobs();
}
inline ::google::protobuf::int32 ProtoNodeMetricsBean::currentrejectedjobs() const {
  return currentrejectedjobs_;
}
inline void ProtoNodeMetricsBean::set_currentrejectedjobs(::google::protobuf::int32 value) {
  set_has_currentrejectedjobs();
  currentrejectedjobs_ = value;
}

// required float averageRejectedJobs = 10 [default = -1];
inline bool ProtoNodeMetricsBean::has_averagerejectedjobs() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_averagerejectedjobs() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ProtoNodeMetricsBean::clear_has_averagerejectedjobs() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ProtoNodeMetricsBean::clear_averagerejectedjobs() {
  averagerejectedjobs_ = -1;
  clear_has_averagerejectedjobs();
}
inline float ProtoNodeMetricsBean::averagerejectedjobs() const {
  return averagerejectedjobs_;
}
inline void ProtoNodeMetricsBean::set_averagerejectedjobs(float value) {
  set_has_averagerejectedjobs();
  averagerejectedjobs_ = value;
}

// required int32 maximumCancelledJobs = 11 [default = -1];
inline bool ProtoNodeMetricsBean::has_maximumcancelledjobs() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_maximumcancelledjobs() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ProtoNodeMetricsBean::clear_has_maximumcancelledjobs() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ProtoNodeMetricsBean::clear_maximumcancelledjobs() {
  maximumcancelledjobs_ = -1;
  clear_has_maximumcancelledjobs();
}
inline ::google::protobuf::int32 ProtoNodeMetricsBean::maximumcancelledjobs() const {
  return maximumcancelledjobs_;
}
inline void ProtoNodeMetricsBean::set_maximumcancelledjobs(::google::protobuf::int32 value) {
  set_has_maximumcancelledjobs();
  maximumcancelledjobs_ = value;
}

// required int32 currentCancelledJobs = 12 [default = -1];
inline bool ProtoNodeMetricsBean::has_currentcancelledjobs() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_currentcancelledjobs() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ProtoNodeMetricsBean::clear_has_currentcancelledjobs() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ProtoNodeMetricsBean::clear_currentcancelledjobs() {
  currentcancelledjobs_ = -1;
  clear_has_currentcancelledjobs();
}
inline ::google::protobuf::int32 ProtoNodeMetricsBean::currentcancelledjobs() const {
  return currentcancelledjobs_;
}
inline void ProtoNodeMetricsBean::set_currentcancelledjobs(::google::protobuf::int32 value) {
  set_has_currentcancelledjobs();
  currentcancelledjobs_ = value;
}

// required float averageCancelledJobs = 13 [default = -1];
inline bool ProtoNodeMetricsBean::has_averagecancelledjobs() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_averagecancelledjobs() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ProtoNodeMetricsBean::clear_has_averagecancelledjobs() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ProtoNodeMetricsBean::clear_averagecancelledjobs() {
  averagecancelledjobs_ = -1;
  clear_has_averagecancelledjobs();
}
inline float ProtoNodeMetricsBean::averagecancelledjobs() const {
  return averagecancelledjobs_;
}
inline void ProtoNodeMetricsBean::set_averagecancelledjobs(float value) {
  set_has_averagecancelledjobs();
  averagecancelledjobs_ = value;
}

// required int32 totalRejectedJobs = 14 [default = -1];
inline bool ProtoNodeMetricsBean::has_totalrejectedjobs() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_totalrejectedjobs() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ProtoNodeMetricsBean::clear_has_totalrejectedjobs() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ProtoNodeMetricsBean::clear_totalrejectedjobs() {
  totalrejectedjobs_ = -1;
  clear_has_totalrejectedjobs();
}
inline ::google::protobuf::int32 ProtoNodeMetricsBean::totalrejectedjobs() const {
  return totalrejectedjobs_;
}
inline void ProtoNodeMetricsBean::set_totalrejectedjobs(::google::protobuf::int32 value) {
  set_has_totalrejectedjobs();
  totalrejectedjobs_ = value;
}

// required int32 totalCancelledJobs = 15 [default = -1];
inline bool ProtoNodeMetricsBean::has_totalcancelledjobs() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_totalcancelledjobs() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ProtoNodeMetricsBean::clear_has_totalcancelledjobs() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ProtoNodeMetricsBean::clear_totalcancelledjobs() {
  totalcancelledjobs_ = -1;
  clear_has_totalcancelledjobs();
}
inline ::google::protobuf::int32 ProtoNodeMetricsBean::totalcancelledjobs() const {
  return totalcancelledjobs_;
}
inline void ProtoNodeMetricsBean::set_totalcancelledjobs(::google::protobuf::int32 value) {
  set_has_totalcancelledjobs();
  totalcancelledjobs_ = value;
}

// required int32 totalExecutedJobs = 16 [default = -1];
inline bool ProtoNodeMetricsBean::has_totalexecutedjobs() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_totalexecutedjobs() {
  _has_bits_[0] |= 0x00008000u;
}
inline void ProtoNodeMetricsBean::clear_has_totalexecutedjobs() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void ProtoNodeMetricsBean::clear_totalexecutedjobs() {
  totalexecutedjobs_ = -1;
  clear_has_totalexecutedjobs();
}
inline ::google::protobuf::int32 ProtoNodeMetricsBean::totalexecutedjobs() const {
  return totalexecutedjobs_;
}
inline void ProtoNodeMetricsBean::set_totalexecutedjobs(::google::protobuf::int32 value) {
  set_has_totalexecutedjobs();
  totalexecutedjobs_ = value;
}

// required int64 maximumJobWaitTime = 17 [default = -1];
inline bool ProtoNodeMetricsBean::has_maximumjobwaittime() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_maximumjobwaittime() {
  _has_bits_[0] |= 0x00010000u;
}
inline void ProtoNodeMetricsBean::clear_has_maximumjobwaittime() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void ProtoNodeMetricsBean::clear_maximumjobwaittime() {
  maximumjobwaittime_ = GOOGLE_LONGLONG(-1);
  clear_has_maximumjobwaittime();
}
inline ::google::protobuf::int64 ProtoNodeMetricsBean::maximumjobwaittime() const {
  return maximumjobwaittime_;
}
inline void ProtoNodeMetricsBean::set_maximumjobwaittime(::google::protobuf::int64 value) {
  set_has_maximumjobwaittime();
  maximumjobwaittime_ = value;
}

// required int64 currentJobWaitTime = 18 [default = -1];
inline bool ProtoNodeMetricsBean::has_currentjobwaittime() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_currentjobwaittime() {
  _has_bits_[0] |= 0x00020000u;
}
inline void ProtoNodeMetricsBean::clear_has_currentjobwaittime() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void ProtoNodeMetricsBean::clear_currentjobwaittime() {
  currentjobwaittime_ = GOOGLE_LONGLONG(-1);
  clear_has_currentjobwaittime();
}
inline ::google::protobuf::int64 ProtoNodeMetricsBean::currentjobwaittime() const {
  return currentjobwaittime_;
}
inline void ProtoNodeMetricsBean::set_currentjobwaittime(::google::protobuf::int64 value) {
  set_has_currentjobwaittime();
  currentjobwaittime_ = value;
}

// required double averageJobWaitTime = 19 [default = -1];
inline bool ProtoNodeMetricsBean::has_averagejobwaittime() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_averagejobwaittime() {
  _has_bits_[0] |= 0x00040000u;
}
inline void ProtoNodeMetricsBean::clear_has_averagejobwaittime() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void ProtoNodeMetricsBean::clear_averagejobwaittime() {
  averagejobwaittime_ = -1;
  clear_has_averagejobwaittime();
}
inline double ProtoNodeMetricsBean::averagejobwaittime() const {
  return averagejobwaittime_;
}
inline void ProtoNodeMetricsBean::set_averagejobwaittime(double value) {
  set_has_averagejobwaittime();
  averagejobwaittime_ = value;
}

// required int64 maximumJobExecuteTime = 20 [default = -1];
inline bool ProtoNodeMetricsBean::has_maximumjobexecutetime() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_maximumjobexecutetime() {
  _has_bits_[0] |= 0x00080000u;
}
inline void ProtoNodeMetricsBean::clear_has_maximumjobexecutetime() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void ProtoNodeMetricsBean::clear_maximumjobexecutetime() {
  maximumjobexecutetime_ = GOOGLE_LONGLONG(-1);
  clear_has_maximumjobexecutetime();
}
inline ::google::protobuf::int64 ProtoNodeMetricsBean::maximumjobexecutetime() const {
  return maximumjobexecutetime_;
}
inline void ProtoNodeMetricsBean::set_maximumjobexecutetime(::google::protobuf::int64 value) {
  set_has_maximumjobexecutetime();
  maximumjobexecutetime_ = value;
}

// required int64 currentJobExecuteTime = 21 [default = -1];
inline bool ProtoNodeMetricsBean::has_currentjobexecutetime() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_currentjobexecutetime() {
  _has_bits_[0] |= 0x00100000u;
}
inline void ProtoNodeMetricsBean::clear_has_currentjobexecutetime() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void ProtoNodeMetricsBean::clear_currentjobexecutetime() {
  currentjobexecutetime_ = GOOGLE_LONGLONG(-1);
  clear_has_currentjobexecutetime();
}
inline ::google::protobuf::int64 ProtoNodeMetricsBean::currentjobexecutetime() const {
  return currentjobexecutetime_;
}
inline void ProtoNodeMetricsBean::set_currentjobexecutetime(::google::protobuf::int64 value) {
  set_has_currentjobexecutetime();
  currentjobexecutetime_ = value;
}

// required double averageJobExecuteTime = 22 [default = -1];
inline bool ProtoNodeMetricsBean::has_averagejobexecutetime() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_averagejobexecutetime() {
  _has_bits_[0] |= 0x00200000u;
}
inline void ProtoNodeMetricsBean::clear_has_averagejobexecutetime() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void ProtoNodeMetricsBean::clear_averagejobexecutetime() {
  averagejobexecutetime_ = -1;
  clear_has_averagejobexecutetime();
}
inline double ProtoNodeMetricsBean::averagejobexecutetime() const {
  return averagejobexecutetime_;
}
inline void ProtoNodeMetricsBean::set_averagejobexecutetime(double value) {
  set_has_averagejobexecutetime();
  averagejobexecutetime_ = value;
}

// required int64 totalIdleTime = 23 [default = -1];
inline bool ProtoNodeMetricsBean::has_totalidletime() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_totalidletime() {
  _has_bits_[0] |= 0x00400000u;
}
inline void ProtoNodeMetricsBean::clear_has_totalidletime() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void ProtoNodeMetricsBean::clear_totalidletime() {
  totalidletime_ = GOOGLE_LONGLONG(-1);
  clear_has_totalidletime();
}
inline ::google::protobuf::int64 ProtoNodeMetricsBean::totalidletime() const {
  return totalidletime_;
}
inline void ProtoNodeMetricsBean::set_totalidletime(::google::protobuf::int64 value) {
  set_has_totalidletime();
  totalidletime_ = value;
}

// required int64 currentIdleTime = 24 [default = -1];
inline bool ProtoNodeMetricsBean::has_currentidletime() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_currentidletime() {
  _has_bits_[0] |= 0x00800000u;
}
inline void ProtoNodeMetricsBean::clear_has_currentidletime() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void ProtoNodeMetricsBean::clear_currentidletime() {
  currentidletime_ = GOOGLE_LONGLONG(-1);
  clear_has_currentidletime();
}
inline ::google::protobuf::int64 ProtoNodeMetricsBean::currentidletime() const {
  return currentidletime_;
}
inline void ProtoNodeMetricsBean::set_currentidletime(::google::protobuf::int64 value) {
  set_has_currentidletime();
  currentidletime_ = value;
}

// required int32 totalCpus = 25 [default = -1];
inline bool ProtoNodeMetricsBean::has_totalcpus() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_totalcpus() {
  _has_bits_[0] |= 0x01000000u;
}
inline void ProtoNodeMetricsBean::clear_has_totalcpus() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void ProtoNodeMetricsBean::clear_totalcpus() {
  totalcpus_ = -1;
  clear_has_totalcpus();
}
inline ::google::protobuf::int32 ProtoNodeMetricsBean::totalcpus() const {
  return totalcpus_;
}
inline void ProtoNodeMetricsBean::set_totalcpus(::google::protobuf::int32 value) {
  set_has_totalcpus();
  totalcpus_ = value;
}

// required double currentCpuLoad = 26 [default = -1];
inline bool ProtoNodeMetricsBean::has_currentcpuload() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_currentcpuload() {
  _has_bits_[0] |= 0x02000000u;
}
inline void ProtoNodeMetricsBean::clear_has_currentcpuload() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void ProtoNodeMetricsBean::clear_currentcpuload() {
  currentcpuload_ = -1;
  clear_has_currentcpuload();
}
inline double ProtoNodeMetricsBean::currentcpuload() const {
  return currentcpuload_;
}
inline void ProtoNodeMetricsBean::set_currentcpuload(double value) {
  set_has_currentcpuload();
  currentcpuload_ = value;
}

// required double averageCpuLoad = 27 [default = -1];
inline bool ProtoNodeMetricsBean::has_averagecpuload() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_averagecpuload() {
  _has_bits_[0] |= 0x04000000u;
}
inline void ProtoNodeMetricsBean::clear_has_averagecpuload() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void ProtoNodeMetricsBean::clear_averagecpuload() {
  averagecpuload_ = -1;
  clear_has_averagecpuload();
}
inline double ProtoNodeMetricsBean::averagecpuload() const {
  return averagecpuload_;
}
inline void ProtoNodeMetricsBean::set_averagecpuload(double value) {
  set_has_averagecpuload();
  averagecpuload_ = value;
}

// required int64 heapMemoryInitialized = 28 [default = -1];
inline bool ProtoNodeMetricsBean::has_heapmemoryinitialized() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_heapmemoryinitialized() {
  _has_bits_[0] |= 0x08000000u;
}
inline void ProtoNodeMetricsBean::clear_has_heapmemoryinitialized() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void ProtoNodeMetricsBean::clear_heapmemoryinitialized() {
  heapmemoryinitialized_ = GOOGLE_LONGLONG(-1);
  clear_has_heapmemoryinitialized();
}
inline ::google::protobuf::int64 ProtoNodeMetricsBean::heapmemoryinitialized() const {
  return heapmemoryinitialized_;
}
inline void ProtoNodeMetricsBean::set_heapmemoryinitialized(::google::protobuf::int64 value) {
  set_has_heapmemoryinitialized();
  heapmemoryinitialized_ = value;
}

// required int64 heapMemoryUsed = 29 [default = -1];
inline bool ProtoNodeMetricsBean::has_heapmemoryused() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_heapmemoryused() {
  _has_bits_[0] |= 0x10000000u;
}
inline void ProtoNodeMetricsBean::clear_has_heapmemoryused() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void ProtoNodeMetricsBean::clear_heapmemoryused() {
  heapmemoryused_ = GOOGLE_LONGLONG(-1);
  clear_has_heapmemoryused();
}
inline ::google::protobuf::int64 ProtoNodeMetricsBean::heapmemoryused() const {
  return heapmemoryused_;
}
inline void ProtoNodeMetricsBean::set_heapmemoryused(::google::protobuf::int64 value) {
  set_has_heapmemoryused();
  heapmemoryused_ = value;
}

// required int64 heapMemoryCommitted = 30 [default = -1];
inline bool ProtoNodeMetricsBean::has_heapmemorycommitted() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_heapmemorycommitted() {
  _has_bits_[0] |= 0x20000000u;
}
inline void ProtoNodeMetricsBean::clear_has_heapmemorycommitted() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void ProtoNodeMetricsBean::clear_heapmemorycommitted() {
  heapmemorycommitted_ = GOOGLE_LONGLONG(-1);
  clear_has_heapmemorycommitted();
}
inline ::google::protobuf::int64 ProtoNodeMetricsBean::heapmemorycommitted() const {
  return heapmemorycommitted_;
}
inline void ProtoNodeMetricsBean::set_heapmemorycommitted(::google::protobuf::int64 value) {
  set_has_heapmemorycommitted();
  heapmemorycommitted_ = value;
}

// required int64 heapMemoryMaximum = 31 [default = -1];
inline bool ProtoNodeMetricsBean::has_heapmemorymaximum() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_heapmemorymaximum() {
  _has_bits_[0] |= 0x40000000u;
}
inline void ProtoNodeMetricsBean::clear_has_heapmemorymaximum() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void ProtoNodeMetricsBean::clear_heapmemorymaximum() {
  heapmemorymaximum_ = GOOGLE_LONGLONG(-1);
  clear_has_heapmemorymaximum();
}
inline ::google::protobuf::int64 ProtoNodeMetricsBean::heapmemorymaximum() const {
  return heapmemorymaximum_;
}
inline void ProtoNodeMetricsBean::set_heapmemorymaximum(::google::protobuf::int64 value) {
  set_has_heapmemorymaximum();
  heapmemorymaximum_ = value;
}

// required int64 nonHeapMemoryInitialized = 32 [default = -1];
inline bool ProtoNodeMetricsBean::has_nonheapmemoryinitialized() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_nonheapmemoryinitialized() {
  _has_bits_[0] |= 0x80000000u;
}
inline void ProtoNodeMetricsBean::clear_has_nonheapmemoryinitialized() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void ProtoNodeMetricsBean::clear_nonheapmemoryinitialized() {
  nonheapmemoryinitialized_ = GOOGLE_LONGLONG(-1);
  clear_has_nonheapmemoryinitialized();
}
inline ::google::protobuf::int64 ProtoNodeMetricsBean::nonheapmemoryinitialized() const {
  return nonheapmemoryinitialized_;
}
inline void ProtoNodeMetricsBean::set_nonheapmemoryinitialized(::google::protobuf::int64 value) {
  set_has_nonheapmemoryinitialized();
  nonheapmemoryinitialized_ = value;
}

// required int64 nonHeapMemoryUsed = 33 [default = -1];
inline bool ProtoNodeMetricsBean::has_nonheapmemoryused() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_nonheapmemoryused() {
  _has_bits_[1] |= 0x00000001u;
}
inline void ProtoNodeMetricsBean::clear_has_nonheapmemoryused() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void ProtoNodeMetricsBean::clear_nonheapmemoryused() {
  nonheapmemoryused_ = GOOGLE_LONGLONG(-1);
  clear_has_nonheapmemoryused();
}
inline ::google::protobuf::int64 ProtoNodeMetricsBean::nonheapmemoryused() const {
  return nonheapmemoryused_;
}
inline void ProtoNodeMetricsBean::set_nonheapmemoryused(::google::protobuf::int64 value) {
  set_has_nonheapmemoryused();
  nonheapmemoryused_ = value;
}

// required int64 nonHeapMemoryCommitted = 34 [default = -1];
inline bool ProtoNodeMetricsBean::has_nonheapmemorycommitted() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_nonheapmemorycommitted() {
  _has_bits_[1] |= 0x00000002u;
}
inline void ProtoNodeMetricsBean::clear_has_nonheapmemorycommitted() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void ProtoNodeMetricsBean::clear_nonheapmemorycommitted() {
  nonheapmemorycommitted_ = GOOGLE_LONGLONG(-1);
  clear_has_nonheapmemorycommitted();
}
inline ::google::protobuf::int64 ProtoNodeMetricsBean::nonheapmemorycommitted() const {
  return nonheapmemorycommitted_;
}
inline void ProtoNodeMetricsBean::set_nonheapmemorycommitted(::google::protobuf::int64 value) {
  set_has_nonheapmemorycommitted();
  nonheapmemorycommitted_ = value;
}

// required int64 nonHeapMemoryMaximum = 35 [default = -1];
inline bool ProtoNodeMetricsBean::has_nonheapmemorymaximum() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_nonheapmemorymaximum() {
  _has_bits_[1] |= 0x00000004u;
}
inline void ProtoNodeMetricsBean::clear_has_nonheapmemorymaximum() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void ProtoNodeMetricsBean::clear_nonheapmemorymaximum() {
  nonheapmemorymaximum_ = GOOGLE_LONGLONG(-1);
  clear_has_nonheapmemorymaximum();
}
inline ::google::protobuf::int64 ProtoNodeMetricsBean::nonheapmemorymaximum() const {
  return nonheapmemorymaximum_;
}
inline void ProtoNodeMetricsBean::set_nonheapmemorymaximum(::google::protobuf::int64 value) {
  set_has_nonheapmemorymaximum();
  nonheapmemorymaximum_ = value;
}

// required int64 upTime = 36 [default = -1];
inline bool ProtoNodeMetricsBean::has_uptime() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_uptime() {
  _has_bits_[1] |= 0x00000008u;
}
inline void ProtoNodeMetricsBean::clear_has_uptime() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void ProtoNodeMetricsBean::clear_uptime() {
  uptime_ = GOOGLE_LONGLONG(-1);
  clear_has_uptime();
}
inline ::google::protobuf::int64 ProtoNodeMetricsBean::uptime() const {
  return uptime_;
}
inline void ProtoNodeMetricsBean::set_uptime(::google::protobuf::int64 value) {
  set_has_uptime();
  uptime_ = value;
}

// required int64 startTime = 37 [default = -1];
inline bool ProtoNodeMetricsBean::has_starttime() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_starttime() {
  _has_bits_[1] |= 0x00000010u;
}
inline void ProtoNodeMetricsBean::clear_has_starttime() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void ProtoNodeMetricsBean::clear_starttime() {
  starttime_ = GOOGLE_LONGLONG(-1);
  clear_has_starttime();
}
inline ::google::protobuf::int64 ProtoNodeMetricsBean::starttime() const {
  return starttime_;
}
inline void ProtoNodeMetricsBean::set_starttime(::google::protobuf::int64 value) {
  set_has_starttime();
  starttime_ = value;
}

// required int64 nodeStartTime = 38 [default = -1];
inline bool ProtoNodeMetricsBean::has_nodestarttime() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_nodestarttime() {
  _has_bits_[1] |= 0x00000020u;
}
inline void ProtoNodeMetricsBean::clear_has_nodestarttime() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void ProtoNodeMetricsBean::clear_nodestarttime() {
  nodestarttime_ = GOOGLE_LONGLONG(-1);
  clear_has_nodestarttime();
}
inline ::google::protobuf::int64 ProtoNodeMetricsBean::nodestarttime() const {
  return nodestarttime_;
}
inline void ProtoNodeMetricsBean::set_nodestarttime(::google::protobuf::int64 value) {
  set_has_nodestarttime();
  nodestarttime_ = value;
}

// required int32 currentThreadCount = 39 [default = -1];
inline bool ProtoNodeMetricsBean::has_currentthreadcount() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_currentthreadcount() {
  _has_bits_[1] |= 0x00000040u;
}
inline void ProtoNodeMetricsBean::clear_has_currentthreadcount() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void ProtoNodeMetricsBean::clear_currentthreadcount() {
  currentthreadcount_ = -1;
  clear_has_currentthreadcount();
}
inline ::google::protobuf::int32 ProtoNodeMetricsBean::currentthreadcount() const {
  return currentthreadcount_;
}
inline void ProtoNodeMetricsBean::set_currentthreadcount(::google::protobuf::int32 value) {
  set_has_currentthreadcount();
  currentthreadcount_ = value;
}

// required int32 maximumThreadCount = 40 [default = -1];
inline bool ProtoNodeMetricsBean::has_maximumthreadcount() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_maximumthreadcount() {
  _has_bits_[1] |= 0x00000080u;
}
inline void ProtoNodeMetricsBean::clear_has_maximumthreadcount() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void ProtoNodeMetricsBean::clear_maximumthreadcount() {
  maximumthreadcount_ = -1;
  clear_has_maximumthreadcount();
}
inline ::google::protobuf::int32 ProtoNodeMetricsBean::maximumthreadcount() const {
  return maximumthreadcount_;
}
inline void ProtoNodeMetricsBean::set_maximumthreadcount(::google::protobuf::int32 value) {
  set_has_maximumthreadcount();
  maximumthreadcount_ = value;
}

// required int64 totalStartedThreadCount = 41 [default = -1];
inline bool ProtoNodeMetricsBean::has_totalstartedthreadcount() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_totalstartedthreadcount() {
  _has_bits_[1] |= 0x00000100u;
}
inline void ProtoNodeMetricsBean::clear_has_totalstartedthreadcount() {
  _has_bits_[1] &= ~0x00000100u;
}
inline void ProtoNodeMetricsBean::clear_totalstartedthreadcount() {
  totalstartedthreadcount_ = GOOGLE_LONGLONG(-1);
  clear_has_totalstartedthreadcount();
}
inline ::google::protobuf::int64 ProtoNodeMetricsBean::totalstartedthreadcount() const {
  return totalstartedthreadcount_;
}
inline void ProtoNodeMetricsBean::set_totalstartedthreadcount(::google::protobuf::int64 value) {
  set_has_totalstartedthreadcount();
  totalstartedthreadcount_ = value;
}

// required int32 currentDaemonThreadCount = 42 [default = -1];
inline bool ProtoNodeMetricsBean::has_currentdaemonthreadcount() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_currentdaemonthreadcount() {
  _has_bits_[1] |= 0x00000200u;
}
inline void ProtoNodeMetricsBean::clear_has_currentdaemonthreadcount() {
  _has_bits_[1] &= ~0x00000200u;
}
inline void ProtoNodeMetricsBean::clear_currentdaemonthreadcount() {
  currentdaemonthreadcount_ = -1;
  clear_has_currentdaemonthreadcount();
}
inline ::google::protobuf::int32 ProtoNodeMetricsBean::currentdaemonthreadcount() const {
  return currentdaemonthreadcount_;
}
inline void ProtoNodeMetricsBean::set_currentdaemonthreadcount(::google::protobuf::int32 value) {
  set_has_currentdaemonthreadcount();
  currentdaemonthreadcount_ = value;
}

// required int64 fileSystemFreeSpace = 43 [default = -1];
inline bool ProtoNodeMetricsBean::has_filesystemfreespace() const {
  return (_has_bits_[1] & 0x00000400u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_filesystemfreespace() {
  _has_bits_[1] |= 0x00000400u;
}
inline void ProtoNodeMetricsBean::clear_has_filesystemfreespace() {
  _has_bits_[1] &= ~0x00000400u;
}
inline void ProtoNodeMetricsBean::clear_filesystemfreespace() {
  filesystemfreespace_ = GOOGLE_LONGLONG(-1);
  clear_has_filesystemfreespace();
}
inline ::google::protobuf::int64 ProtoNodeMetricsBean::filesystemfreespace() const {
  return filesystemfreespace_;
}
inline void ProtoNodeMetricsBean::set_filesystemfreespace(::google::protobuf::int64 value) {
  set_has_filesystemfreespace();
  filesystemfreespace_ = value;
}

// required int64 fileSystemTotalSpace = 44 [default = -1];
inline bool ProtoNodeMetricsBean::has_filesystemtotalspace() const {
  return (_has_bits_[1] & 0x00000800u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_filesystemtotalspace() {
  _has_bits_[1] |= 0x00000800u;
}
inline void ProtoNodeMetricsBean::clear_has_filesystemtotalspace() {
  _has_bits_[1] &= ~0x00000800u;
}
inline void ProtoNodeMetricsBean::clear_filesystemtotalspace() {
  filesystemtotalspace_ = GOOGLE_LONGLONG(-1);
  clear_has_filesystemtotalspace();
}
inline ::google::protobuf::int64 ProtoNodeMetricsBean::filesystemtotalspace() const {
  return filesystemtotalspace_;
}
inline void ProtoNodeMetricsBean::set_filesystemtotalspace(::google::protobuf::int64 value) {
  set_has_filesystemtotalspace();
  filesystemtotalspace_ = value;
}

// required int64 fileSystemUsableSpace = 45 [default = -1];
inline bool ProtoNodeMetricsBean::has_filesystemusablespace() const {
  return (_has_bits_[1] & 0x00001000u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_filesystemusablespace() {
  _has_bits_[1] |= 0x00001000u;
}
inline void ProtoNodeMetricsBean::clear_has_filesystemusablespace() {
  _has_bits_[1] &= ~0x00001000u;
}
inline void ProtoNodeMetricsBean::clear_filesystemusablespace() {
  filesystemusablespace_ = GOOGLE_LONGLONG(-1);
  clear_has_filesystemusablespace();
}
inline ::google::protobuf::int64 ProtoNodeMetricsBean::filesystemusablespace() const {
  return filesystemusablespace_;
}
inline void ProtoNodeMetricsBean::set_filesystemusablespace(::google::protobuf::int64 value) {
  set_has_filesystemusablespace();
  filesystemusablespace_ = value;
}

// required int64 lastDataVersion = 46 [default = -1];
inline bool ProtoNodeMetricsBean::has_lastdataversion() const {
  return (_has_bits_[1] & 0x00002000u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_lastdataversion() {
  _has_bits_[1] |= 0x00002000u;
}
inline void ProtoNodeMetricsBean::clear_has_lastdataversion() {
  _has_bits_[1] &= ~0x00002000u;
}
inline void ProtoNodeMetricsBean::clear_lastdataversion() {
  lastdataversion_ = GOOGLE_LONGLONG(-1);
  clear_has_lastdataversion();
}
inline ::google::protobuf::int64 ProtoNodeMetricsBean::lastdataversion() const {
  return lastdataversion_;
}
inline void ProtoNodeMetricsBean::set_lastdataversion(::google::protobuf::int64 value) {
  set_has_lastdataversion();
  lastdataversion_ = value;
}

// optional double currentGcCpuLoad = 47 [default = -1];
inline bool ProtoNodeMetricsBean::has_currentgccpuload() const {
  return (_has_bits_[1] & 0x00004000u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_currentgccpuload() {
  _has_bits_[1] |= 0x00004000u;
}
inline void ProtoNodeMetricsBean::clear_has_currentgccpuload() {
  _has_bits_[1] &= ~0x00004000u;
}
inline void ProtoNodeMetricsBean::clear_currentgccpuload() {
  currentgccpuload_ = -1;
  clear_has_currentgccpuload();
}
inline double ProtoNodeMetricsBean::currentgccpuload() const {
  return currentgccpuload_;
}
inline void ProtoNodeMetricsBean::set_currentgccpuload(double value) {
  set_has_currentgccpuload();
  currentgccpuload_ = value;
}

// optional int32 totalExecutedTasks = 48 [default = -1];
inline bool ProtoNodeMetricsBean::has_totalexecutedtasks() const {
  return (_has_bits_[1] & 0x00008000u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_totalexecutedtasks() {
  _has_bits_[1] |= 0x00008000u;
}
inline void ProtoNodeMetricsBean::clear_has_totalexecutedtasks() {
  _has_bits_[1] &= ~0x00008000u;
}
inline void ProtoNodeMetricsBean::clear_totalexecutedtasks() {
  totalexecutedtasks_ = -1;
  clear_has_totalexecutedtasks();
}
inline ::google::protobuf::int32 ProtoNodeMetricsBean::totalexecutedtasks() const {
  return totalexecutedtasks_;
}
inline void ProtoNodeMetricsBean::set_totalexecutedtasks(::google::protobuf::int32 value) {
  set_has_totalexecutedtasks();
  totalexecutedtasks_ = value;
}

// optional int32 sentMessagesCount = 49 [default = -1];
inline bool ProtoNodeMetricsBean::has_sentmessagescount() const {
  return (_has_bits_[1] & 0x00010000u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_sentmessagescount() {
  _has_bits_[1] |= 0x00010000u;
}
inline void ProtoNodeMetricsBean::clear_has_sentmessagescount() {
  _has_bits_[1] &= ~0x00010000u;
}
inline void ProtoNodeMetricsBean::clear_sentmessagescount() {
  sentmessagescount_ = -1;
  clear_has_sentmessagescount();
}
inline ::google::protobuf::int32 ProtoNodeMetricsBean::sentmessagescount() const {
  return sentmessagescount_;
}
inline void ProtoNodeMetricsBean::set_sentmessagescount(::google::protobuf::int32 value) {
  set_has_sentmessagescount();
  sentmessagescount_ = value;
}

// optional int64 sentBytesCount = 50 [default = -1];
inline bool ProtoNodeMetricsBean::has_sentbytescount() const {
  return (_has_bits_[1] & 0x00020000u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_sentbytescount() {
  _has_bits_[1] |= 0x00020000u;
}
inline void ProtoNodeMetricsBean::clear_has_sentbytescount() {
  _has_bits_[1] &= ~0x00020000u;
}
inline void ProtoNodeMetricsBean::clear_sentbytescount() {
  sentbytescount_ = GOOGLE_LONGLONG(-1);
  clear_has_sentbytescount();
}
inline ::google::protobuf::int64 ProtoNodeMetricsBean::sentbytescount() const {
  return sentbytescount_;
}
inline void ProtoNodeMetricsBean::set_sentbytescount(::google::protobuf::int64 value) {
  set_has_sentbytescount();
  sentbytescount_ = value;
}

// optional int32 receivedMessagesCount = 51 [default = -1];
inline bool ProtoNodeMetricsBean::has_receivedmessagescount() const {
  return (_has_bits_[1] & 0x00040000u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_receivedmessagescount() {
  _has_bits_[1] |= 0x00040000u;
}
inline void ProtoNodeMetricsBean::clear_has_receivedmessagescount() {
  _has_bits_[1] &= ~0x00040000u;
}
inline void ProtoNodeMetricsBean::clear_receivedmessagescount() {
  receivedmessagescount_ = -1;
  clear_has_receivedmessagescount();
}
inline ::google::protobuf::int32 ProtoNodeMetricsBean::receivedmessagescount() const {
  return receivedmessagescount_;
}
inline void ProtoNodeMetricsBean::set_receivedmessagescount(::google::protobuf::int32 value) {
  set_has_receivedmessagescount();
  receivedmessagescount_ = value;
}

// optional int64 receivedBytesCount = 52 [default = -1];
inline bool ProtoNodeMetricsBean::has_receivedbytescount() const {
  return (_has_bits_[1] & 0x00080000u) != 0;
}
inline void ProtoNodeMetricsBean::set_has_receivedbytescount() {
  _has_bits_[1] |= 0x00080000u;
}
inline void ProtoNodeMetricsBean::clear_has_receivedbytescount() {
  _has_bits_[1] &= ~0x00080000u;
}
inline void ProtoNodeMetricsBean::clear_receivedbytescount() {
  receivedbytescount_ = GOOGLE_LONGLONG(-1);
  clear_has_receivedbytescount();
}
inline ::google::protobuf::int64 ProtoNodeMetricsBean::receivedbytescount() const {
  return receivedbytescount_;
}
inline void ProtoNodeMetricsBean::set_receivedbytescount(::google::protobuf::int64 value) {
  set_has_receivedbytescount();
  receivedbytescount_ = value;
}

// -------------------------------------------------------------------

// ProtoNodeBean

// required bytes nodeId = 1;
inline bool ProtoNodeBean::has_nodeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoNodeBean::set_has_nodeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoNodeBean::clear_has_nodeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoNodeBean::clear_nodeid() {
  if (nodeid_ != &::google::protobuf::internal::kEmptyString) {
    nodeid_->clear();
  }
  clear_has_nodeid();
}
inline const ::std::string& ProtoNodeBean::nodeid() const {
  return *nodeid_;
}
inline void ProtoNodeBean::set_nodeid(const ::std::string& value) {
  set_has_nodeid();
  if (nodeid_ == &::google::protobuf::internal::kEmptyString) {
    nodeid_ = new ::std::string;
  }
  nodeid_->assign(value);
}
inline void ProtoNodeBean::set_nodeid(const char* value) {
  set_has_nodeid();
  if (nodeid_ == &::google::protobuf::internal::kEmptyString) {
    nodeid_ = new ::std::string;
  }
  nodeid_->assign(value);
}
inline void ProtoNodeBean::set_nodeid(const void* value, size_t size) {
  set_has_nodeid();
  if (nodeid_ == &::google::protobuf::internal::kEmptyString) {
    nodeid_ = new ::std::string;
  }
  nodeid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtoNodeBean::mutable_nodeid() {
  set_has_nodeid();
  if (nodeid_ == &::google::protobuf::internal::kEmptyString) {
    nodeid_ = new ::std::string;
  }
  return nodeid_;
}
inline ::std::string* ProtoNodeBean::release_nodeid() {
  clear_has_nodeid();
  if (nodeid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = nodeid_;
    nodeid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated string tcpAddress = 2;
inline int ProtoNodeBean::tcpaddress_size() const {
  return tcpaddress_.size();
}
inline void ProtoNodeBean::clear_tcpaddress() {
  tcpaddress_.Clear();
}
inline const ::std::string& ProtoNodeBean::tcpaddress(int index) const {
  return tcpaddress_.Get(index);
}
inline ::std::string* ProtoNodeBean::mutable_tcpaddress(int index) {
  return tcpaddress_.Mutable(index);
}
inline void ProtoNodeBean::set_tcpaddress(int index, const ::std::string& value) {
  tcpaddress_.Mutable(index)->assign(value);
}
inline void ProtoNodeBean::set_tcpaddress(int index, const char* value) {
  tcpaddress_.Mutable(index)->assign(value);
}
inline void ProtoNodeBean::set_tcpaddress(int index, const char* value, size_t size) {
  tcpaddress_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtoNodeBean::add_tcpaddress() {
  return tcpaddress_.Add();
}
inline void ProtoNodeBean::add_tcpaddress(const ::std::string& value) {
  tcpaddress_.Add()->assign(value);
}
inline void ProtoNodeBean::add_tcpaddress(const char* value) {
  tcpaddress_.Add()->assign(value);
}
inline void ProtoNodeBean::add_tcpaddress(const char* value, size_t size) {
  tcpaddress_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ProtoNodeBean::tcpaddress() const {
  return tcpaddress_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ProtoNodeBean::mutable_tcpaddress() {
  return &tcpaddress_;
}

// repeated string jettyAddress = 3;
inline int ProtoNodeBean::jettyaddress_size() const {
  return jettyaddress_.size();
}
inline void ProtoNodeBean::clear_jettyaddress() {
  jettyaddress_.Clear();
}
inline const ::std::string& ProtoNodeBean::jettyaddress(int index) const {
  return jettyaddress_.Get(index);
}
inline ::std::string* ProtoNodeBean::mutable_jettyaddress(int index) {
  return jettyaddress_.Mutable(index);
}
inline void ProtoNodeBean::set_jettyaddress(int index, const ::std::string& value) {
  jettyaddress_.Mutable(index)->assign(value);
}
inline void ProtoNodeBean::set_jettyaddress(int index, const char* value) {
  jettyaddress_.Mutable(index)->assign(value);
}
inline void ProtoNodeBean::set_jettyaddress(int index, const char* value, size_t size) {
  jettyaddress_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtoNodeBean::add_jettyaddress() {
  return jettyaddress_.Add();
}
inline void ProtoNodeBean::add_jettyaddress(const ::std::string& value) {
  jettyaddress_.Add()->assign(value);
}
inline void ProtoNodeBean::add_jettyaddress(const char* value) {
  jettyaddress_.Add()->assign(value);
}
inline void ProtoNodeBean::add_jettyaddress(const char* value, size_t size) {
  jettyaddress_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ProtoNodeBean::jettyaddress() const {
  return jettyaddress_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ProtoNodeBean::mutable_jettyaddress() {
  return &jettyaddress_;
}

// required int32 tcpPort = 4;
inline bool ProtoNodeBean::has_tcpport() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoNodeBean::set_has_tcpport() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoNodeBean::clear_has_tcpport() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoNodeBean::clear_tcpport() {
  tcpport_ = 0;
  clear_has_tcpport();
}
inline ::google::protobuf::int32 ProtoNodeBean::tcpport() const {
  return tcpport_;
}
inline void ProtoNodeBean::set_tcpport(::google::protobuf::int32 value) {
  set_has_tcpport();
  tcpport_ = value;
}

// required int32 jettyPort = 5;
inline bool ProtoNodeBean::has_jettyport() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProtoNodeBean::set_has_jettyport() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProtoNodeBean::clear_has_jettyport() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProtoNodeBean::clear_jettyport() {
  jettyport_ = 0;
  clear_has_jettyport();
}
inline ::google::protobuf::int32 ProtoNodeBean::jettyport() const {
  return jettyport_;
}
inline void ProtoNodeBean::set_jettyport(::google::protobuf::int32 value) {
  set_has_jettyport();
  jettyport_ = value;
}

// optional .org.gridgain.grid.kernal.processors.rest.client.message.ProtoNodeMetricsBean metrics = 6;
inline bool ProtoNodeBean::has_metrics() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProtoNodeBean::set_has_metrics() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProtoNodeBean::clear_has_metrics() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProtoNodeBean::clear_metrics() {
  if (metrics_ != NULL) metrics_->::org::gridgain::grid::kernal::processors::rest::client::message::ProtoNodeMetricsBean::Clear();
  clear_has_metrics();
}
inline const ::org::gridgain::grid::kernal::processors::rest::client::message::ProtoNodeMetricsBean& ProtoNodeBean::metrics() const {
  return metrics_ != NULL ? *metrics_ : *default_instance_->metrics_;
}
inline ::org::gridgain::grid::kernal::processors::rest::client::message::ProtoNodeMetricsBean* ProtoNodeBean::mutable_metrics() {
  set_has_metrics();
  if (metrics_ == NULL) metrics_ = new ::org::gridgain::grid::kernal::processors::rest::client::message::ProtoNodeMetricsBean;
  return metrics_;
}
inline ::org::gridgain::grid::kernal::processors::rest::client::message::ProtoNodeMetricsBean* ProtoNodeBean::release_metrics() {
  clear_has_metrics();
  ::org::gridgain::grid::kernal::processors::rest::client::message::ProtoNodeMetricsBean* temp = metrics_;
  metrics_ = NULL;
  return temp;
}

// optional .org.gridgain.grid.kernal.processors.rest.client.message.Map attributes = 7;
inline bool ProtoNodeBean::has_attributes() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ProtoNodeBean::set_has_attributes() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ProtoNodeBean::clear_has_attributes() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ProtoNodeBean::clear_attributes() {
  if (attributes_ != NULL) attributes_->::org::gridgain::grid::kernal::processors::rest::client::message::Map::Clear();
  clear_has_attributes();
}
inline const ::org::gridgain::grid::kernal::processors::rest::client::message::Map& ProtoNodeBean::attributes() const {
  return attributes_ != NULL ? *attributes_ : *default_instance_->attributes_;
}
inline ::org::gridgain::grid::kernal::processors::rest::client::message::Map* ProtoNodeBean::mutable_attributes() {
  set_has_attributes();
  if (attributes_ == NULL) attributes_ = new ::org::gridgain::grid::kernal::processors::rest::client::message::Map;
  return attributes_;
}
inline ::org::gridgain::grid::kernal::processors::rest::client::message::Map* ProtoNodeBean::release_attributes() {
  clear_has_attributes();
  ::org::gridgain::grid::kernal::processors::rest::client::message::Map* temp = attributes_;
  attributes_ = NULL;
  return temp;
}

// optional .org.gridgain.grid.kernal.processors.rest.client.message.Map caches = 9;
inline bool ProtoNodeBean::has_caches() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ProtoNodeBean::set_has_caches() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ProtoNodeBean::clear_has_caches() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ProtoNodeBean::clear_caches() {
  if (caches_ != NULL) caches_->::org::gridgain::grid::kernal::processors::rest::client::message::Map::Clear();
  clear_has_caches();
}
inline const ::org::gridgain::grid::kernal::processors::rest::client::message::Map& ProtoNodeBean::caches() const {
  return caches_ != NULL ? *caches_ : *default_instance_->caches_;
}
inline ::org::gridgain::grid::kernal::processors::rest::client::message::Map* ProtoNodeBean::mutable_caches() {
  set_has_caches();
  if (caches_ == NULL) caches_ = new ::org::gridgain::grid::kernal::processors::rest::client::message::Map;
  return caches_;
}
inline ::org::gridgain::grid::kernal::processors::rest::client::message::Map* ProtoNodeBean::release_caches() {
  clear_has_caches();
  ::org::gridgain::grid::kernal::processors::rest::client::message::Map* temp = caches_;
  caches_ = NULL;
  return temp;
}

// repeated string tcpHostName = 10;
inline int ProtoNodeBean::tcphostname_size() const {
  return tcphostname_.size();
}
inline void ProtoNodeBean::clear_tcphostname() {
  tcphostname_.Clear();
}
inline const ::std::string& ProtoNodeBean::tcphostname(int index) const {
  return tcphostname_.Get(index);
}
inline ::std::string* ProtoNodeBean::mutable_tcphostname(int index) {
  return tcphostname_.Mutable(index);
}
inline void ProtoNodeBean::set_tcphostname(int index, const ::std::string& value) {
  tcphostname_.Mutable(index)->assign(value);
}
inline void ProtoNodeBean::set_tcphostname(int index, const char* value) {
  tcphostname_.Mutable(index)->assign(value);
}
inline void ProtoNodeBean::set_tcphostname(int index, const char* value, size_t size) {
  tcphostname_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtoNodeBean::add_tcphostname() {
  return tcphostname_.Add();
}
inline void ProtoNodeBean::add_tcphostname(const ::std::string& value) {
  tcphostname_.Add()->assign(value);
}
inline void ProtoNodeBean::add_tcphostname(const char* value) {
  tcphostname_.Add()->assign(value);
}
inline void ProtoNodeBean::add_tcphostname(const char* value, size_t size) {
  tcphostname_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ProtoNodeBean::tcphostname() const {
  return tcphostname_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ProtoNodeBean::mutable_tcphostname() {
  return &tcphostname_;
}

// repeated string jettyHostName = 11;
inline int ProtoNodeBean::jettyhostname_size() const {
  return jettyhostname_.size();
}
inline void ProtoNodeBean::clear_jettyhostname() {
  jettyhostname_.Clear();
}
inline const ::std::string& ProtoNodeBean::jettyhostname(int index) const {
  return jettyhostname_.Get(index);
}
inline ::std::string* ProtoNodeBean::mutable_jettyhostname(int index) {
  return jettyhostname_.Mutable(index);
}
inline void ProtoNodeBean::set_jettyhostname(int index, const ::std::string& value) {
  jettyhostname_.Mutable(index)->assign(value);
}
inline void ProtoNodeBean::set_jettyhostname(int index, const char* value) {
  jettyhostname_.Mutable(index)->assign(value);
}
inline void ProtoNodeBean::set_jettyhostname(int index, const char* value, size_t size) {
  jettyhostname_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtoNodeBean::add_jettyhostname() {
  return jettyhostname_.Add();
}
inline void ProtoNodeBean::add_jettyhostname(const ::std::string& value) {
  jettyhostname_.Add()->assign(value);
}
inline void ProtoNodeBean::add_jettyhostname(const char* value) {
  jettyhostname_.Add()->assign(value);
}
inline void ProtoNodeBean::add_jettyhostname(const char* value, size_t size) {
  jettyhostname_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ProtoNodeBean::jettyhostname() const {
  return jettyhostname_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ProtoNodeBean::mutable_jettyhostname() {
  return &jettyhostname_;
}

// required int32 replicaCount = 13;
inline bool ProtoNodeBean::has_replicacount() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ProtoNodeBean::set_has_replicacount() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ProtoNodeBean::clear_has_replicacount() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ProtoNodeBean::clear_replicacount() {
  replicacount_ = 0;
  clear_has_replicacount();
}
inline ::google::protobuf::int32 ProtoNodeBean::replicacount() const {
  return replicacount_;
}
inline void ProtoNodeBean::set_replicacount(::google::protobuf::int32 value) {
  set_has_replicacount();
  replicacount_ = value;
}

// required .org.gridgain.grid.kernal.processors.rest.client.message.ObjectWrapper consistentId = 14;
inline bool ProtoNodeBean::has_consistentid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ProtoNodeBean::set_has_consistentid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ProtoNodeBean::clear_has_consistentid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ProtoNodeBean::clear_consistentid() {
  if (consistentid_ != NULL) consistentid_->::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper::Clear();
  clear_has_consistentid();
}
inline const ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper& ProtoNodeBean::consistentid() const {
  return consistentid_ != NULL ? *consistentid_ : *default_instance_->consistentid_;
}
inline ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* ProtoNodeBean::mutable_consistentid() {
  set_has_consistentid();
  if (consistentid_ == NULL) consistentid_ = new ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper;
  return consistentid_;
}
inline ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* ProtoNodeBean::release_consistentid() {
  clear_has_consistentid();
  ::org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapper* temp = consistentid_;
  consistentid_ = NULL;
  return temp;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace client
}  // namespace rest
}  // namespace processors
}  // namespace kernal
}  // namespace grid
}  // namespace gridgain
}  // namespace org

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::org::gridgain::grid::kernal::processors::rest::client::message::ProtoCacheRequest_GridCacheOperation>() {
  return ::org::gridgain::grid::kernal::processors::rest::client::message::ProtoCacheRequest_GridCacheOperation_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapperType>() {
  return org::gridgain::grid::kernal::processors::rest::client::message::ObjectWrapperType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ClientMessages_2eproto__INCLUDED
